## MidTerm 52002 2022

# Student IDs: 
ID1: 205614845
ID2: 315313577


## You must show a "Proof of Work" for each question, even if there is no explicit output. 
## For example, a proof of work can be a printout/output that demonstrates that your command achieved the requirements. 

""" Question 1 Shell Command ($): """

pwd

cd /mnt/c/Users/orelb/Downloads

head -10 stackoverflow_numpy_qa.csv

wc -l stackoverflow_numpy_qa.csv

wc -w stackoverflow_numpy_qa.csv

wc -m stackoverflow_numpy_qa.csv

""" Question 1 Shell Output ($): """

/home/orelbi

id,Questions_title,tags,answer_count,score_question,score_answer,question_creation_date,answer_creation_date,question_body,answer_body
7818811,Import Error: No module named numpy,python|python-3.x|numpy|import|scipy,27,278,0,2011-10-19 08:54:16.127 UTC,2021-07-27 13:01:18.44 UTC,"<p>I have a very similar question to <a href=""https://stackoverflow.com/questions/1517129/python-how-do-i-install-scipy-on-64-bit-windows"">this question</a>; but still one step behind. I have only one version of Python 3 installed on my Windows 7 (<em>sorry</em>) 64-bit system.</p>  <p>I installed numpy following this <a href=""http://sourceforge.net/projects/numpy/files/NumPy/1.3.0/numpy-1.3.0.win-amd64-py2.6.msi/download?use_mirror=ufpr"" rel=""noreferrer"">link</a> - as suggested in the question. The installation went fine but when I execute </p>  <pre><code>import numpy </code></pre>  <p>I got the following error:</p>  <blockquote>   <p>Import error: No module named numpy</p> </blockquote>  <p>I know this is probably a super basic question; but I'm still learning.</p>  <p>Thanks</p>","<p>For whom installation target is <strong>Raspberry Pi</strong>; as <a href=""https://numpy.org/devdocs/user/troubleshooting-importerror.html"" rel=""nofollow noreferrer"">here</a> they suggest:</p> <pre><code>sudo apt-get install libatlas-base-dev </code></pre> <p>could be working.</p>"
30003068,How to get a list of all indices of repeated elements in a numpy array,python|arrays|numpy,9,21,0,2015-05-02 13:49:48.667 UTC,2021-08-22 01:01:30.743 UTC,<p>I'm trying to get the index of all repeated elements in a numpy array; but the solution I found for the moment is REALLY inefficient for a large (&gt;20000 elements) input array (it takes more or less 9 seconds). The idea is simple:</p> <ol> <li><p><code>records_array</code>is a numpy array of timestamps (<code>datetime</code>) from which we want to extract the indexes of repeated timestamps</p> </li> <li><p><code>time_array</code> is a numpy array containing all the timestamps that are repeated in <code>records_array</code></p> </li> <li><p><code>records</code> is a django QuerySet (which can easily converted to a list) containing some Record objects. We want to create a list of couples formed by all possible combinations of tagId attributes of Record corresponding to the repeated timestamps found from <code>records_array</code>.</p> </li> </ol> <p>Here is the working (but inefficient) code I have for the moment:</p> <pre><code>tag_couples = []; for t in time_array:     users_inter = np.nonzero(records_array == t)[0] # Get all repeated timestamps in records_array for time t     l = [str(records[i].tagId) for i in users_inter] # Create a temporary list containing all tagIds recorded at time t     if l.count(l[0]) != len(l): #remove tuples formed by the first tag repeated         tag_couples +=[x for x in itertools.combinations(list(set(l));2)] # Remove duplicates with list(set(l)) and append all possible couple combinations to tag_couples </code></pre> <p>I'm quite sure this can be optimized by using Numpy; but I can't find a way to compare <code>records_array</code> with each element of <code>time_array</code> without using a for loop (this can't be compared by just using <code>==</code>; since they are both arrays).</p>,"<h3><code>numba.jit</code></h3> <p>Another solution; but using <code>numba.jit</code>:</p> <pre><code>def np_unique_indices(arr; **kwargs):     &quot;&quot;&quot;Unique indices for N-D arrays.&quot;&quot;&quot;     vals; indices = np_unique_indices_1d(arr.reshape(-1))     vals = np.asarray(vals)     indices = [np.stack(np.unravel_index(x; arr.shape)) for x in indices]     return vals; indices   @numba.njit def np_unique_indices_1d(arr):     &quot;&quot;&quot;Unique indices for 1D arrays.&quot;&quot;&quot;     idxs = [[0 for _ in range(0)] for _ in range(0)]     ptr = {}     ptr_count = 0      for i; x in enumerate(arr):         if (x in ptr) == False:             idxs.append([0 for _ in range(0)])             ptr[x] = ptr_count             ptr_count += 1         idxs[ptr[x]].append(i)      vals = [x for x in ptr]     idxs = [np.array(x) for x in idxs]     return vals; idxs </code></pre> <p>Using @Trenton McKinney's and user27443's benchmark:</p> <p><a href=""https://i.stack.imgur.com/UPQzg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UPQzg.png"" alt=""enter image description here"" /></a></p> <p>Note that the performance of all the solutions depends on the size of the arrays and the amount of unique labels; so I recommend testing them yourself for your own data.</p>"
30003068,How to get a list of all indices of repeated elements in a numpy array,python|arrays|numpy,9,21,0,2015-05-02 13:49:48.667 UTC,2021-07-27 08:06:14.66 UTC,<p>I'm trying to get the index of all repeated elements in a numpy array; but the solution I found for the moment is REALLY inefficient for a large (&gt;20000 elements) input array (it takes more or less 9 seconds). The idea is simple:</p> <ol> <li><p><code>records_array</code>is a numpy array of timestamps (<code>datetime</code>) from which we want to extract the indexes of repeated timestamps</p> </li> <li><p><code>time_array</code> is a numpy array containing all the timestamps that are repeated in <code>records_array</code></p> </li> <li><p><code>records</code> is a django QuerySet (which can easily converted to a list) containing some Record objects. We want to create a list of couples formed by all possible combinations of tagId attributes of Record corresponding to the repeated timestamps found from <code>records_array</code>.</p> </li> </ol> <p>Here is the working (but inefficient) code I have for the moment:</p> <pre><code>tag_couples = []; for t in time_array:     users_inter = np.nonzero(records_array == t)[0] # Get all repeated timestamps in records_array for time t     l = [str(records[i].tagId) for i in users_inter] # Create a temporary list containing all tagIds recorded at time t     if l.count(l[0]) != len(l): #remove tuples formed by the first tag repeated         tag_couples +=[x for x in itertools.combinations(list(set(l));2)] # Remove duplicates with list(set(l)) and append all possible couple combinations to tag_couples </code></pre> <p>I'm quite sure this can be optimized by using Numpy; but I can't find a way to compare <code>records_array</code> with each element of <code>time_array</code> without using a for loop (this can't be compared by just using <code>==</code>; since they are both arrays).</p>,<pre><code>import numpy as np from numpy.lib import recfunctions as rfn  ndtype = [('records_array'; int)] # Check the data type records_array = np.ma.array([1; 2; 1; 3; 2; 3; 3; 4; 5]).view(ndtype) # Structured array idxs = list(rfn.find_duplicates(records_array; key=None; ignoremask=True; return_index=True)[1]) # List of indices of repeated elements </code></pre>
58868528,Importing the numpy c-extensions failed,python|numpy|visual-studio-code|miniconda,13,48,0,2019-11-15 00:21:29.167 UTC,2021-08-26 23:08:08.01 UTC,"<p></p>  <h3>Importing the numpy c-extensions failed</h3>  <p>I installed <em>python 3.7</em> on my windows system to work on <em><strong>visual studio code</strong></em>. Everything was going well; including using the libraries. I uninstalled python using the <em>uninstalling program tool in control panel</em>. And installed <em><strong>Miniconda 3</strong></em>. I checked that everything works well; and then installed the numpy library using <code>conda install numpy</code> in my terminal <em><strong>GitBash</strong></em> on <strong><em>windows 10</em></strong>; then checked it on my visial studio code; but it failed to start.</p>  <h3>Reproducing code example:</h3>    <pre class=""lang-py prettyprint-override""><code>import numpy as np A = np.array([[-1]; [7]; [-26]]) </code></pre>    <h3>Error message:</h3>  <blockquote>   <p>Traceback (most recent call last):   File   ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy\core__init__.py"";   line 17; in        from . import multiarray   File ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy\core\multiarray.py"";   line 14; in        from . import overrides   File ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy\core\overrides.py"";   line 7; in        from numpy.core._multiarray_umath import ( ImportError: DLL load failed: Не найден указанный модуль.</p>      <p>During handling of the above exception; another exception occurred:</p>      <p>Traceback (most recent call last):   File   ""c:/Users/ramim/Desktop/22/Matrix library/alsf.py""; line 3; in          import numpy as np   File ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy__init__.py""; line   142; in        from . import core   File ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy\core__init__.py"";   line 47; in        raise ImportError(msg) ImportError:</p>      <p>IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!</p>      <p>Importing the numpy c-extensions failed.   - Try uninstalling and reinstalling numpy.   - If you have already done that; then:     1. Check that you expected to use Python3.7 from ""C:\Users\ramim\Miniconda3\python.exe"";        and that you have no directories in your PATH or PYTHONPATH that can        interfere with the Python and numpy version ""1.17.3"" you're trying to use.     2. If (1) looks fine; you can open a new issue at        <a href=""https://github.com/numpy/numpy/issues"" rel=""noreferrer"">https://github.com/numpy/numpy/issues</a>.  Please include details on:        - how you installed Python        - how you installed numpy        - your operating system        - whether or not you have multiple versions of Python installed        - if you built from source; your compiler versions and ideally a build log</p>      <ul>   <li>If you're working with a numpy git repository; try <code>git clean -xdf</code>   (removes all files not under version control) and rebuild numpy.</li>   </ul>      <p>Note: this error has many possible causes; so please don't comment on   an existing issue about this - open a new one instead.</p>      <p>Original error was: DLL load failed: Не найден указанный модуль.</p> </blockquote>      <h3>Numpy/Python version information:</h3>  <p> Python 3.7.5 Numpy 1.17.3</p>  <p>I tried to uninstall and install the numpy library again; but it was useless. <strong><em>Note:</em></strong> when I type in the teminal <code>conda install numpy</code>; it says:</p>  <blockquote>   <p>All requested packages already installed</p> </blockquote>  <p>That's how I checked if numpy is really installed! </p>  <p><strong><em>How to solve that?</em></strong></p>",<p>I solved the problem by reinstalling NumPy through pip:</p> <pre><code>pip install --upgrade --force-reinstall numpy                   </code></pre>
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,1,2013-09-09 03:25:02.583 UTC,2021-07-21 06:51:49.653 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,<p>When you using the -1 (or any other negative integer numbers; i made this test kkk) in</p> <pre><code>b = numpy.reshape(a; -1) </code></pre> <p>you are only saying for the <code>numpy.reshape</code> to automatically calculate the size of the vector (rows x columns) and relocate it into a 1-D vector with that dimension. This command is interesting because it does it automatically for you. If you wanted to reshape the vector to 1-D by putting a positive integer value; the <code>reshape</code> command would only work if you correctly entered the value &quot;rows x columns&quot;. So being able to enter a negative integer makes the process easier; you know.</p>
65336789,numpy build fail in M1 Big sur 11.1,python-3.x|macos|numpy,14,50,1,2020-12-17 08:08:18.403 UTC,2021-07-22 23:27:22.743 UTC,"<p>I am using MacBook m1 which is running Big Sur 11.1 ;and I have installed <code>Xcode-commandline-tools</code> version 12.3 and it has installed <code>python3.8.5</code> and <code>pip3</code> .python3 and pip are native apps;that is they run in ARM</p> <p><code>pip3</code> version <code>20.3.3</code></p> <p><code>python3</code> version <code>3.8.5</code></p> <p><code>setuptools</code> version <code>51.0.0</code></p> <p><code>wheel</code> version <code>0.36.2</code></p> <p>when I type <code>python3 -m pip install numpy</code></p> <p>The output is :</p> <pre><code>Defaulting to user installation because normal site-packages is not writeable Collecting numpy   Using cached numpy-1.19.4.zip (7.3 MB)   Installing build dependencies: started   Installing build dependencies: finished with status 'done'   Getting requirements to build wheel: started   Getting requirements to build wheel: finished with status 'done'     Preparing wheel metadata: started     Preparing wheel metadata: finished with status 'done' Building wheels for collected packages: numpy   Building wheel for numpy (PEP 517): started sandeep@Sandeeps-Air ~ % cat a Defaulting to user installation because normal site-packages is not writeable Collecting numpy   Using cached numpy-1.19.4.zip (7.3 MB)   Installing build dependencies: started   Installing build dependencies: finished with status 'done'   Getting requirements to build wheel: started   Getting requirements to build wheel: finished with status 'done'     Preparing wheel metadata: started     Preparing wheel metadata: finished with status 'done' Building wheels for collected packages: numpy   Building wheel for numpy (PEP 517): started   Building wheel for numpy (PEP 517): finished with status 'error' Failed to build numpy </code></pre> <p>and with a very large list of <a href=""https://pastebin.ubuntu.com/p/vr4SWqZdqj/"" rel=""noreferrer"">errors</a></p> <p>Is numpy still not supported in M1 or am I doing it wrong ?</p>",<p>As mentioned in a previous answer; the installation went smooth when I opened the terminal using Rosetta.</p> <p>However for anyone who is using Pycharm terminal; Do the following to get the terminal running using Rosetta.</p> <ul> <li>Go to Preferences -&gt; Tools -&gt; Terminal</li> <li>Update the script path to &quot;env /usr/bin/arch -x86_64 /bin/zsh --login&quot;</li> </ul> <p>I tried a lot of other options but so far this was the simplest solution I found.</p>
43877692,Pandas in AWS lambda gives numpy error,python|pandas|numpy|amazon-s3|aws-lambda,17,59,1,2017-05-09 18:48:56.553 UTC,2021-07-30 20:56:00.707 UTC,"<p>I've been trying to run my code in AWS Lambda which imports pandas. So here is what I've done. I have a python file which contains a simple code as follows(This file has the lambda handler)</p>  <pre><code>import json print('Loading function') import pandas as pd def lambda_handler(event; context):     return ""Welcome to Pandas usage in AWS Lambda"" </code></pre>  <ol> <li>I have zipped this python file along with numpy; pandas and pytz libraries as a deployment package (Did all these in Amazon EC2 linux machine) </li> <li>Then uploaded the package into S3</li> <li>Created a lambda function(runtime=python3.6) and uploaded the deployment package from S3</li> </ol>  <p>But when I test the lambda function in AWS Lambda; I get the below error:</p>  <pre><code>Unable to import module 'lambda_function': Missing required dependencies ['numpy'] </code></pre>  <p>I already have numpy in the zipped package but still I get this error. I tried to follow the hints given at <a href=""https://stackoverflow.com/questions/36054976/pandas-aws-lambda"">Pandas &amp; AWS Lambda</a> but no luck.</p>  <p>Did anyone ran into the same issue. Would appreciate any hint or suggestions to solve this problem.</p>  <p>Thanks</p>","<p>Using ideas from these answers and SO 55695187; I've built a layer for AWS Lambda containing pandas and made it available at github. It has pandas v 1.3.1 for Python 3.8. See <a href=""https://github.com/eoneil1942/pandas"" rel=""nofollow noreferrer"">https://github.com/eoneil1942/pandas</a>. Here is what I did:</p> <pre><code>Created an ec2 instance for AWS Linux Installed python3.8; pip3; used pip3 to install pandas Made an empty directory python/lib/python3.8/site-packages Copied pandas and pytz from installed site-packages to this one zip -r pandas.zip python </code></pre> <p>Clearly this generalizes to any Python package.</p>"
54063285,numpy is already installed with Anaconda but I get an ImportError (DLL load failed: The specified module could not be found),python|python-3.x|numpy|pycharm,20,49,1,2019-01-06 15:57:40.127 UTC,2021-08-04 12:14:00.567 UTC,"<p>I am using the Anaconda distribution with Python 3.7. Among the packages installed; I have numpy; pandas; etc. In PyCharm IDE; I have set the Project Interpreter to be the path to the python.exe installed with Anaconda: C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\python.exe</p> <p>However; when I try running a simple python script:</p> <pre><code>import numpy as np print(np.pi) </code></pre> <p>I get an error:</p> <pre><code>ImportError:  Importing the multiarray numpy extension module failed.  Most likely you are trying to import a failed build of numpy. If you're working with a numpy git repo; try `git clean -xdf` (removes all files not under version control).  Otherwise reinstall numpy.  Original error was: DLL load failed: The specified module could not be found.  See the full error message below:  ---------------------------------------------------------------------------------- Traceback (most recent call last):   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\core\__init__.py&quot;; line 16; in &lt;module&gt;     from . import multiarray ImportError: DLL load failed: The specified module could not be found.  During handling of the above exception; another exception occurred:  Traceback (most recent call last):   File &quot;C:/Users/my_user_name/Documents/TestMyApps/simpletest.py&quot;; line 1; in &lt;module&gt;     import numpy as np   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\__init__.py&quot;; line 142; in &lt;module&gt;     from . import add_newdocs   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\add_newdocs.py&quot;; line 13; in &lt;module&gt;     from numpy.lib import add_newdoc   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\lib\__init__.py&quot;; line 8; in &lt;module&gt;     from .type_check import *   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\lib\type_check.py&quot;; line 11; in &lt;module&gt;     import numpy.core.numeric as _nx   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\core\__init__.py&quot;; line 26; in &lt;module&gt;     raise ImportError(msg) ImportError:  Importing the multiarray numpy extension module failed.  Most likely you are trying to import a failed build of numpy. If you're working with a numpy git repo; try `git clean -xdf` (removes all files not under version control).  Otherwise reinstall numpy.  Original error was: DLL load failed: The specified module could not be found.   Process finished with exit code 1  ---------------------------------------------------------------------------------- </code></pre> <p>I have tried uninstalling and reinstalling numpy using Anaconda Prompt with: conda uninstall numpy; and then: conda install numpy [I now have numpy 1.15.4]. The re-install seem 'successful' (at least according to Anaconda Prompt); but; I keep getting an error in PyCharm.</p> <p>The strange part; is when I directly go into Anaconda Prompt; and type:</p> <pre><code>python import numpy as np print(np.pi) </code></pre> <p>I do not get any error; and I am able to see the <a href=""https://imgur.com/a/Z6qHBIY"" rel=""noreferrer"">correct result printed out</a>. At first; I thought that perhaps; when using PyCharm; I am somehow pointing to a different executable; but I checked in both Anaconda Prompt and Python Console of Pycharm; using:</p> <pre><code>sys.executable </code></pre> <p>and they both show the same path:</p> <pre><code>'C:\\Users\\my_user_name\\AppData\\Local\\Continuum\\anaconda3\\python.exe' </code></pre> <p>Note that in PyCharm; when I try running a script where I am not importing any library; or when the library imported are just like sys or os; the scripts run fine. However; when I try running any other script that involves importing a library that somehow depends on numpy; it fails as well (i.e. scripts where I import pandas; etc.) Those same scripts work fine in Anaconda Prompt.</p> <p>I am at a loss here; any help would be very appreciated!</p>",<p>Adding Anaconda to System PATH didn't work for me; but uninstalling and reinstalling did.</p>
54063285,numpy is already installed with Anaconda but I get an ImportError (DLL load failed: The specified module could not be found),python|python-3.x|numpy|pycharm,20,49,1,2019-01-06 15:57:40.127 UTC,2021-08-13 18:19:05.463 UTC,"<p>I am using the Anaconda distribution with Python 3.7. Among the packages installed; I have numpy; pandas; etc. In PyCharm IDE; I have set the Project Interpreter to be the path to the python.exe installed with Anaconda: C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\python.exe</p> <p>However; when I try running a simple python script:</p> <pre><code>import numpy as np print(np.pi) </code></pre> <p>I get an error:</p> <pre><code>ImportError:  Importing the multiarray numpy extension module failed.  Most likely you are trying to import a failed build of numpy. If you're working with a numpy git repo; try `git clean -xdf` (removes all files not under version control).  Otherwise reinstall numpy.  Original error was: DLL load failed: The specified module could not be found.  See the full error message below:  ---------------------------------------------------------------------------------- Traceback (most recent call last):   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\core\__init__.py&quot;; line 16; in &lt;module&gt;     from . import multiarray ImportError: DLL load failed: The specified module could not be found.  During handling of the above exception; another exception occurred:  Traceback (most recent call last):   File &quot;C:/Users/my_user_name/Documents/TestMyApps/simpletest.py&quot;; line 1; in &lt;module&gt;     import numpy as np   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\__init__.py&quot;; line 142; in &lt;module&gt;     from . import add_newdocs   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\add_newdocs.py&quot;; line 13; in &lt;module&gt;     from numpy.lib import add_newdoc   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\lib\__init__.py&quot;; line 8; in &lt;module&gt;     from .type_check import *   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\lib\type_check.py&quot;; line 11; in &lt;module&gt;     import numpy.core.numeric as _nx   File &quot;C:\Users\my_user_name\AppData\Local\Continuum\anaconda3\lib\site-packages\numpy\core\__init__.py&quot;; line 26; in &lt;module&gt;     raise ImportError(msg) ImportError:  Importing the multiarray numpy extension module failed.  Most likely you are trying to import a failed build of numpy. If you're working with a numpy git repo; try `git clean -xdf` (removes all files not under version control).  Otherwise reinstall numpy.  Original error was: DLL load failed: The specified module could not be found.   Process finished with exit code 1  ---------------------------------------------------------------------------------- </code></pre> <p>I have tried uninstalling and reinstalling numpy using Anaconda Prompt with: conda uninstall numpy; and then: conda install numpy [I now have numpy 1.15.4]. The re-install seem 'successful' (at least according to Anaconda Prompt); but; I keep getting an error in PyCharm.</p> <p>The strange part; is when I directly go into Anaconda Prompt; and type:</p> <pre><code>python import numpy as np print(np.pi) </code></pre> <p>I do not get any error; and I am able to see the <a href=""https://imgur.com/a/Z6qHBIY"" rel=""noreferrer"">correct result printed out</a>. At first; I thought that perhaps; when using PyCharm; I am somehow pointing to a different executable; but I checked in both Anaconda Prompt and Python Console of Pycharm; using:</p> <pre><code>sys.executable </code></pre> <p>and they both show the same path:</p> <pre><code>'C:\\Users\\my_user_name\\AppData\\Local\\Continuum\\anaconda3\\python.exe' </code></pre> <p>Note that in PyCharm; when I try running a script where I am not importing any library; or when the library imported are just like sys or os; the scripts run fine. However; when I try running any other script that involves importing a library that somehow depends on numpy; it fails as well (i.e. scripts where I import pandas; etc.) Those same scripts work fine in Anaconda Prompt.</p> <p>I am at a loss here; any help would be very appreciated!</p>",<p>I tried to include the PATH but it didn't work. So I tried reinstalling Anaconda and realized that the previous time I installed it; I had not enabled the option &quot;Add Anaconda3 to my PATH environment variable&quot;. I enabled that and installed and it worked perfectly.</p>

46821 stackoverflow_numpy_qa.csv

12987259 stackoverflow_numpy_qa.csv

105763396 stackoverflow_numpy_qa.csv

""" Question 2 Shell Command ($): """

grep "pandas" stackoverflow_numpy_qa.csv | wc -l

awk '!seen[$9]++' stackoverflow_numpy_qa.csv > phase2_1.csv
awk -F"," '{if($9 ~ /pandas|scipy/) print $9}' phase2_1.csv | wc -l

""" Question 2 Shell Output ($): """

5421

2540

""" Question 3 Shell Command ($): """

awk -F"," 'BEGIN{OFS = ","}{$11 = length($9); print}' stackoverflow_numpy_qa.csv > phase4_1.csv

awk -F"," 'BEGIN{OFS = ","}{$12 = length($10); print}' phase4_1.csv > phase4_2.csv

sort -t"," -k 11,11 -nr phase4_2.csv > phase4_3.csv

awk '!seen[$9]++' phase4_3.csv > finalans4.csv

head -5 finalans4.csv

""" Question 3 Shell Output ($): """

71004940,Cannot install numpy for PyPy 3.8 on Win10,numpy|windows-10|pypy,2,0,1,2022-02-06 07:08:41.84 UTC,2022-02-06 07:13:08.787 UTC,"<p>I am attempting to try out pypy; and I can install a few packages; but the important ones like Numpy and Pandas go boom!!!  I get similar issues if I try it within PyCharm.</p> <p>see below.  Also at some point I also saw this error.</p> <pre>      Optimized (vendor) Blas libraries are not found.       Falls back to netlib Blas library which has worse performance.       A better performance should be easily gained by switching       Blas library.    Blas (http://www.netlib.org/blas/) libraries not found.       Directories to search for the libraries can be specified in the       numpy/distutils/site.cfg file (section [blas]) or by setting       the BLAS environment variable. ```  ``` pypy -m pip install --extra-index-url https://antocuni.github.io/pypy-wheels/manylinux2010 numpy  ``` C:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64>pypy -m pip install --extra-index-url https://antocuni.github.io/pypy-wheels/manylinux2010 numpy Looking in indexes: https://pypi.org/simple; https://antocuni.github.io/pypy-wheels/manylinux2010 warning: missing-index-doctype  The package index page being used does not have a proper HTML doctype declaration.  Problematic URL: https://antocuni.github.io/pypy-wheels/manylinux2010/numpy/  note: This is an issue with the page at the URL mentioned above. hint: You might need to reach out to the owner of that package index; to get this fixed. See https://github.com/pypa/pip/issues/10825 for context. Collecting numpy   Using cached numpy-1.22.2.zip (11.4 MB)   Installing build dependencies ... done   Getting requirements to build wheel ... done   Preparing metadata (pyproject.toml) ... done Building wheels for collected packages: numpy   Building wheel for numpy (pyproject.toml) ... error   error: subprocess-exited-with-error    Building wheel for numpy (pyproject.toml) did not run successfully.   exit code: 1    [690 lines of output]   Processing numpy/random\_bounded_integers.pxd.in ...   Processing numpy/random\_sfc64.pyx   Cythonizing sources   WARN: Could not locate executable g77   WARN: Could not locate executable f77   WARN: Could not locate executable ifort   WARN: Could not locate executable ifl   WARN: Could not locate executable f90   WARN: Could not locate executable DF   WARN: Could not locate executable efl   WARN: Could not locate executable gfortran   WARN: Could not locate executable f95   WARN: Could not locate executable g95   WARN: Could not locate executable efort   WARN: Could not locate executable efc   WARN: Could not locate executable flang   WARN: don't know how to compile Fortran code on platform 'nt'   non-existing path in 'numpy\\distutils': 'site.cfg'   running bdist_wheel   running build ...   creating build\src.win-amd64-3.8\numpy\core\src\multiarray   BUILD_ARCHITECTURE: 'AMD64'; os.name='nt'; sys.platform='win32'   non-existing path in 'numpy\\core': 'build\\src.win-amd64-3.8\\numpy\\core\\src\\common'   creating build\src.win-amd64-3.8\numpy\core\src\common ...   creating build\src.win-amd64-3.8\numpy\linalg   ### Warning:  Using unoptimized lapack ###   ### Warning:  Using unoptimized lapack ###   running build_py ...   creating C:\Users\QUENTI~1\AppData\Local\Temp\tmp2x_oanlm\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks   WARN: CCompilerOpt.__init__[1169] : feature 'AVX512_KNL' is disabled; MSVC compiler doesn't support it   WARN: CCompilerOpt.__init__[1169] : feature 'AVX512_KNM' is disabled; MSVC compiler doesn't support it   WARN: CCompilerOpt.dist_test[590] : CCompilerOpt._dist_test_spawn[714] : Flags in command (C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\x86_amd64\cl.exe /c /nologo /O2 /W3 /GL /DNDEBUG /MD -Inumpy\core\src\common -Inumpy\core\src -Inumpy\core -Inumpy\core\src\npymath -Inumpy\core\src\multiarray -Inumpy\core\src\umath -Inumpy\core\src\npysort -Inumpy\core\src\_simd -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -Ibuild\src.win-amd64-3.8\numpy\core\src\common -Ibuild\src.win-amd64-3.8\numpy\core\src\npymath -IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\ucrt -IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\shared -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\winrt /TcC:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\test_flags.c /FoC:\Users\QUENTI~1\AppData\Local\Temp\tmp2x_oanlm\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\test_flags.obj /arch:AVX512) aren't supported by the compiler; output ->   cl : Command line warning D9002 : ignoring unknown option '/arch:AVX512'   test_flags.c    WARN: CCompilerOpt.cc_test_flags[1025] : testing failed   WARN: CCompilerOpt.dist_test[590] : CCompilerOpt._dist_test_spawn[726] : Command (C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\x86_amd64\cl.exe /c /nologo /O2 /W3 /GL /DNDEBUG /MD -Inumpy\core\src\common -Inumpy\core\src -Inumpy\core -Inumpy\core\src\npymath -Inumpy\core\src\multiarray -Inumpy\core\src\umath -Inumpy\core\src\npysort -Inumpy\core\src\_simd -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -Ibuild\src.win-amd64-3.8\numpy\core\src\common -Ibuild\src.win-amd64-3.8\numpy\core\src\npymath -IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\ucrt -IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\shared -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\winrt /TcC:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c /FoC:\Users\QUENTI~1\AppData\Local\Temp\tmp2x_oanlm\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.obj /arch:AVX2 /WX) failed with exit status 2 output ->   cpu_avx512cd.c   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(18): error C2065: '__m512i': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(18): error C2146: syntax error: missing ';' before identifier 'a'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(18): error C2065: 'a': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(18): warning C4013: '_mm512_lzcnt_epi32' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(18): warning C4013: '_mm512_loadu_si512' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(18): error C2146: syntax error: missing ')' before identifier '__m512i'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(18): error C2059: syntax error: ')'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(18): error C2297: '*': illegal; right operand has type 'char *'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(18): error C2143: syntax error: missing ')' before ';'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(19): warning C4013: '_mm512_castsi512_si128' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(19): error C2065: 'a': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(19): error C2440: 'function': cannot convert from 'int' to '__m128i'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512cd.c(19): warning C4024: '_mm_cvtsi128_si32': different types for formal and actual parameter 1    WARN: CCompilerOpt.feature_test[1490] : testing failed   WARN: CCompilerOpt.dist_test[590] : CCompilerOpt._dist_test_spawn[726] : Command (C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\x86_amd64\cl.exe /c /nologo /O2 /W3 /GL /DNDEBUG /MD -Inumpy\core\src\common -Inumpy\core\src -Inumpy\core -Inumpy\core\src\npymath -Inumpy\core\src\multiarray -Inumpy\core\src\umath -Inumpy\core\src\npysort -Inumpy\core\src\_simd -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -Ibuild\src.win-amd64-3.8\numpy\core\src\common -Ibuild\src.win-amd64-3.8\numpy\core\src\npymath -IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\ucrt -IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\shared -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\winrt /TcC:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c /FoC:\Users\QUENTI~1\AppData\Local\Temp\tmp2x_oanlm\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.obj /arch:AVX2 /WX) failed with exit status 2 output ->   cpu_avx512f.c   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(18): error C2065: '__m512i': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(18): error C2146: syntax error: missing ';' before identifier 'a'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(18): error C2065: 'a': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(18): warning C4013: '_mm512_abs_epi32' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(18): warning C4013: '_mm512_loadu_si512' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(18): error C2146: syntax error: missing ')' before identifier '__m512i'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(18): error C2059: syntax error: ')'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(18): error C2297: '*': illegal; right operand has type 'char *'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(18): error C2143: syntax error: missing ')' before ';'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(19): warning C4013: '_mm512_castsi512_si128' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(19): error C2065: 'a': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(19): error C2440: 'function': cannot convert from 'int' to '__m128i'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512f.c(19): warning C4024: '_mm_cvtsi128_si32': different types for formal and actual parameter 1    WARN: CCompilerOpt.feature_test[1490] : testing failed   WARN: CCompilerOpt.dist_test[590] : CCompilerOpt._dist_test_spawn[726] : Command (C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\x86_amd64\cl.exe /c /nologo /O2 /W3 /GL /DNDEBUG /MD -Inumpy\core\src\common -Inumpy\core\src -Inumpy\core -Inumpy\core\src\npymath -Inumpy\core\src\multiarray -Inumpy\core\src\umath -Inumpy\core\src\npysort -Inumpy\core\src\_simd -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -Ibuild\src.win-amd64-3.8\numpy\core\src\common -Ibuild\src.win-amd64-3.8\numpy\core\src\npymath -IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\ucrt -IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\shared -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\winrt /TcC:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c /FoC:\Users\QUENTI~1\AppData\Local\Temp\tmp2x_oanlm\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.obj /arch:AVX2 /WX) failed with exit status 2 output ->   cpu_avx512_skx.c   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(18): error C2065: '__m512i': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(18): error C2146: syntax error: missing ';' before identifier 'aa'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(18): error C2065: 'aa': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(18): warning C4013: '_mm512_abs_epi32' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(18): warning C4013: '_mm512_loadu_si512' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(18): error C2146: syntax error: missing ')' before identifier '__m512i'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(18): error C2059: syntax error: ')'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(18): error C2297: '*': illegal; right operand has type 'char *'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(18): error C2143: syntax error: missing ')' before ';'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(20): warning C4013: '_mm256_abs_epi64' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(20): warning C4013: '_mm512_extracti64x4_epi64' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(20): error C2065: 'aa': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(22): error C2065: '__m512i': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(22): error C2146: syntax error: missing ';' before identifier 'b'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(22): error C2065: 'b': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(22): warning C4013: '_mm512_broadcast_i32x8' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(24): error C2065: 'b': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(24): warning C4013: '_mm512_abs_epi16' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(25): warning C4013: '_mm512_castsi512_si128' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(25): error C2065: 'b': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(25): error C2440: 'function': cannot convert from 'int' to '__m128i'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(25): warning C4024: '_mm_cvtsi128_si32': different types for formal and actual parameter 1   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_skx.c(20): error C2440: 'initializing': cannot convert from 'int' to '__m256i'    WARN: CCompilerOpt.feature_test[1490] : testing failed   WARN: CCompilerOpt.dist_test[590] : CCompilerOpt._dist_test_spawn[726] : Command (C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\x86_amd64\cl.exe /c /nologo /O2 /W3 /GL /DNDEBUG /MD -Inumpy\core\src\common -Inumpy\core\src -Inumpy\core -Inumpy\core\src\npymath -Inumpy\core\src\multiarray -Inumpy\core\src\umath -Inumpy\core\src\npysort -Inumpy\core\src\_simd -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -Ibuild\src.win-amd64-3.8\numpy\core\src\common -Ibuild\src.win-amd64-3.8\numpy\core\src\npymath -IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\ucrt -IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\shared -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\winrt /TcC:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c /FoC:\Users\QUENTI~1\AppData\Local\Temp\tmp2x_oanlm\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.obj /arch:AVX2 /WX) failed with exit status 2 output ->   cpu_avx512_clx.c   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(19): error C2065: '__m512i': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(19): error C2146: syntax error: missing ';' before identifier 'a'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(19): error C2065: 'a': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(19): warning C4013: '_mm512_loadu_si512' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(19): error C2146: syntax error: missing ')' before identifier '__m512i'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(19): error C2059: syntax error: ')'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(19): error C2297: '*': illegal; right operand has type 'char *'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(19): error C2143: syntax error: missing ')' before ';'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(20): error C2065: 'a': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(20): warning C4013: '_mm512_dpbusd_epi32' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(20): warning C4013: '_mm512_setzero_si512' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(21): warning C4013: '_mm512_castsi512_si128' undefined; assuming extern returning int   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(21): error C2065: 'a': undeclared identifier   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(21): error C2440: 'function': cannot convert from 'int' to '__m128i'   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\checks\cpu_avx512_clx.c(21): warning C4024: '_mm_cvtsi128_si32': different types for formal and actual parameter 1    WARN: CCompilerOpt.feature_test[1490] : testing failed   WARN: CCompilerOpt.generate_dispatch_header[2291] : dispatch header dir build\src.win-amd64-3.8\numpy\distutils\include does not exist; creating it   creating build\temp.win-amd64-3.8 ...   creating build\temp.win-amd64-3.8\numpy\random\src\distributions   running build_ext   WARN: Missing compiler_cxx fix for MSVCCompiler   creating build\temp.win-amd64-3.8\Release\build ...   creating build\temp.win-amd64-3.8\Release\build\src.win-amd64-3.8\numpy\core\src\umath   loops_trigonometric.dispatch.avx2.c   numpy\core\src\npymath\npy_math_internal.h.src(897): warning C4244: 'return': conversion from 'unsigned short' to 'uint8_t'; possible loss of data   numpy\core\src\npymath\npy_math_internal.h.src(903): warning C4244: 'return': conversion from 'unsigned __int64' to 'uint8_t'; possible loss of data   numpy\core\src\umath\loops_trigonometric.dispatch.c.src(40): error C2059: syntax error: 'bad suffix on number'   numpy\core\src\umath\loops_trigonometric.dispatch.c.src(40): warning C4305: 'function': truncation from 'double' to 'float' ...   numpy\core\src\umath\loops_trigonometric.dispatch.c.src(109): warning C4305: 'function': truncation from 'double' to 'float'   numpy\core\src\umath\loops_trigonometric.dispatch.c.src(110): error C2059: syntax error: 'bad suffix on number'   Running from numpy source directory.   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\system_info.py:2077: UserWarning:       Optimized (vendor) Blas libraries are not found.       Falls back to netlib Blas library which has worse performance.       A better performance should be easily gained by switching       Blas library.     if self._calc_info(blas):   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\system_info.py:2077: UserWarning:       Blas (http://www.netlib.org/blas/) libraries not found.       Directories to search for the libraries can be specified in the       numpy/distutils/site.cfg file (section [blas]) or by setting       the BLAS environment variable.     if self._calc_info(blas):   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\system_info.py:2077: UserWarning:       Blas (http://www.netlib.org/blas/) sources not found.       Directories to search for the sources can be specified in the       numpy/distutils/site.cfg file (section [blas_src]) or by setting       the BLAS_SRC environment variable.     if self._calc_info(blas):   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\system_info.py:1902: UserWarning:       Lapack (http://www.netlib.org/lapack/) libraries not found.       Directories to search for the libraries can be specified in the       numpy/distutils/site.cfg file (section [lapack]) or by setting       the LAPACK environment variable.     return getattr(self; '_calc_info_{}'.format(name))()   C:\Users\QUENTI~1\AppData\Local\Temp\pip-install-a470u9k7\numpy_24426d81db7f45d5a2e20cd49f3e097f\numpy\distutils\system_info.py:1902: UserWarning:       Lapack (http://www.netlib.org/lapack/) sources not found.       Directories to search for the sources can be specified in the       numpy/distutils/site.cfg file (section [lapack_src]) or by setting       the LAPACK_SRC environment variable.     return getattr(self; '_calc_info_{}'.format(name))()   Warning: attempted relative import with no known parent package   C:\Users\QUENTI~1\AppData\Local\Temp\pip-build-env-qem0ndd3\overlay\Lib\site-packages\setuptools\_distutils\dist.py:275: UserWarning: Unknown distribution option: 'define_macros'     warnings.warn(msg)   error: Command ""C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\x86_amd64\cl.exe /c /nologo /O2 /W3 /GL /DNDEBUG /MD -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -Ibuild\src.win-amd64-3.8\numpy\core\src\common -Ibuild\src.win-amd64-3.8\numpy\core\src\umath -Inumpy\core\include -Ibuild\src.win-amd64-3.8\numpy\core\include/numpy -Ibuild\src.win-amd64-3.8\numpy\distutils\include -Inumpy\core\src\common -Inumpy\core\src -Inumpy\core -Inumpy\core\src\npymath -Inumpy\core\src\multiarray -Inumpy\core\src\umath -Inumpy\core\src\npysort -Inumpy\core\src\_simd -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -IC:\Users\Quentin_Sarafinchan\pypy\pypy3.8-v7.3.7-win64\include -Ibuild\src.win-amd64-3.8\numpy\core\src\common -Ibuild\src.win-amd64-3.8\numpy\core\src\npymath -IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\ucrt -IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\shared -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\um -IC:\Program Files (x86)\Windows Kits\10\include\10.0.14393.0\winrt /Tcbuild\src.win-amd64-3.8\numpy\core\src\umath\loops_trigonometric.dispatch.avx2.c /Fobuild\temp.win-amd64-3.8\Release\build\src.win-amd64-3.8\numpy\core\src\umath\loops_trigonometric.dispatch.avx2.obj /Zm1000 /O2 /arch:AVX2"" failed with exit status 2   [end of output]    note: This error originates from a subprocess; and is likely not a problem with pip.   ERROR: Failed building wheel for numpy Failed to build numpy ERROR: Could not build wheels for numpy; which is required to install pyproject.toml-based projects </pre>",<p>Install using <code>conda</code> when you don't have cl,29390,195 dependencies available to install. Using <code>conda install</code> is a highly preferred way to install python packages.</p>
60302848,Object Detection crash after 5428 steps; TypeError: 'numpy.float64' object cannot be interpreted as an integer,numpy|tensorflow|typeerror|object-detection,4,6,3,2020-02-19 14:42:16.347 UTC,2020-04-08 05:44:28.85 UTC,"<p>My object detector has run multiple times but at this mark of 5428 it then crashes from TypeError's </p>  <p>I'm running in in anaconda with:</p>  <ul> <li>numpy 1.18.1</li> <li>numpy-base 1.18.1</li> <li>tensorflow-gpu 1.14</li> </ul>  <p>This snippet below I think is the most important error?:</p>  <pre><code>2020-02-19 13:56:06.901096: W tensorflow/core/framework/op_kernel.cc:1490] Invalid argument: TypeError: object of type &lt;class 'numpy.float64'&gt; cannot be safely interpreted as an integer. Traceback (most recent call last):    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\numpy\core\function_base.py""; line 117; in linspace     num = operator.index(num)  TypeError: 'numpy.float64' object cannot be interpreted as an integer </code></pre>  <p>The full traceback is below:</p>  <pre><code>I0219 13:55:41.016854 15428 basic_session_run_hooks.py:260] loss = 0.0140173; step = 5400 (10.773 sec) INFO:tensorflow:Saving checkpoints for 5428 into training/model.ckpt. I0219 13:55:43.900022 15428 basic_session_run_hooks.py:606] Saving checkpoints for 5428 into training/model.ckpt. INFO:tensorflow:Calling model_fn. I0219 13:55:56.207441 15428 estimator.py:1145] Calling model_fn. INFO:tensorflow:Scale of 0 disables regularizer. I0219 13:55:58.009801 15428 regularizers.py:98] Scale of 0 disables regularizer. INFO:tensorflow:Scale of 0 disables regularizer. I0219 13:55:58.025418 15428 regularizers.py:98] Scale of 0 disables regularizer. INFO:tensorflow:depth of additional conv before box predictor: 0 I0219 13:55:58.025418 15428 convolutional_box_predictor.py:151] depth of additional conv before box predictor: 0 INFO:tensorflow:Scale of 0 disables regularizer. I0219 13:55:59.573186 15428 regularizers.py:98] Scale of 0 disables regularizer. INFO:tensorflow:Scale of 0 disables regularizer. I0219 13:55:59.588815 15428 regularizers.py:98] Scale of 0 disables regularizer. WARNING:tensorflow:From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\eval_util.py:796: to_int64 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version. Instructions for updating: Use `tf.cast` instead. W0219 13:56:00.855241 15428 deprecation.py:323] From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\eval_util.py:796: to_int64 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version. Instructions for updating: Use `tf.cast` instead. WARNING:tensorflow:From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\utils\visualization_utils.py:498: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version. Instructions for updating: tf.py_func is deprecated in TF V2. Instead; there are two     options available in V2.     - tf.py_function takes a python function which manipulates tf eager     tensors instead of numpy arrays. It's easy to convert a tf eager tensor to     an ndarray (just call tensor.numpy()) but having access to eager tensors     means `tf.py_function`s can use accelerators such as GPUs as well as     being differentiable using a gradient tape.     - tf.numpy_function maintains the semantics of the deprecated tf.py_func     (it is not differentiable; and manipulates numpy arrays). It drops the     stateful argument making all functions stateful.  W0219 13:56:01.105266 15428 deprecation.py:323] From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\utils\visualization_utils.py:498: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version. Instructions for updating: tf.py_func is deprecated in TF V2. Instead; there are two     options available in V2.     - tf.py_function takes a python function which manipulates tf eager     tensors instead of numpy arrays. It's easy to convert a tf eager tensor to     an ndarray (just call tensor.numpy()) but having access to eager tensors     means `tf.py_function`s can use accelerators such as GPUs as well as     being differentiable using a gradient tape.     - tf.numpy_function maintains the semantics of the deprecated tf.py_func     (it is not differentiable; and manipulates numpy arrays). It drops the     stateful argument making all functions stateful.  WARNING:tensorflow:From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\utils\visualization_utils.py:1044: The name tf.summary.image is deprecated. Please use tf.compat.v1.summary.image instead.  W0219 13:56:01.277014 15428 deprecation_wrapper.py:119] From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\utils\visualization_utils.py:1044: The name tf.summary.image is deprecated. Please use tf.compat.v1.summary.image instead.  WARNING:tensorflow:From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\model_lib.py:484: The name tf.metrics.mean is deprecated. Please use tf.compat.v1.metrics.mean instead.  W0219 13:56:01.386395 15428 deprecation_wrapper.py:119] From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\model_lib.py:484: The name tf.metrics.mean is deprecated. Please use tf.compat.v1.metrics.mean instead.  INFO:tensorflow:Done calling model_fn. I0219 13:56:01.749697 15428 estimator.py:1147] Done calling model_fn. INFO:tensorflow:Starting evaluation at 2020-02-19T13:56:01Z I0219 13:56:01.781106 15428 evaluation.py:255] Starting evaluation at 2020-02-19T13:56:01Z INFO:tensorflow:Graph was finalized. I0219 13:56:02.489665 15428 monitored_session.py:240] Graph was finalized. 2020-02-19 13:56:02.508162: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1640] Found device 0 with properties: name: GeForce GTX 1080 Ti major: 6 minor: 1 memoryClockRate(GHz): 1.683 pciBusID: 0000:06:00.0 2020-02-19 13:56:02.512995: I tensorflow/stream_executor/platform/default/dlopen_checker_stub.cc:25] GPU libraries are statically linked; skip dlopen check. 2020-02-19 13:56:02.516493: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1763] Adding visible gpu devices: 0 2020-02-19 13:56:02.518703: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1181] Device interconnect StreamExecutor with strength 1 edge matrix: 2020-02-19 13:56:02.523922: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1187]      0 2020-02-19 13:56:02.526614: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1200] 0:   N 2020-02-19 13:56:02.529223: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1326] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8788 MB memory) -&gt; physical GPU (device: 0; name: GeForce GTX 1080 Ti; pci bus id: 0000:06:00.0; compute capability: 6.1) WARNING:tensorflow:From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version. Instructions for updating: Use standard file APIs to check for files with this prefix. W0219 13:56:02.535778 15428 deprecation.py:323] From C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version. Instructions for updating: Use standard file APIs to check for files with this prefix. INFO:tensorflow:Restoring parameters from training/model.ckpt-5428 I0219 13:56:02.538779 15428 saver.py:1280] Restoring parameters from training/model.ckpt-5428 INFO:tensorflow:Running local_init_op. I0219 13:56:03.495252 15428 session_manager.py:500] Running local_init_op. INFO:tensorflow:Done running local_init_op. I0219 13:56:03.656017 15428 session_manager.py:502] Done running local_init_op. INFO:tensorflow:Performing evaluation on 5 images. I0219 13:56:06.852077 13368 coco_evaluation.py:205] Performing evaluation on 5 images. creating index... index created! INFO:tensorflow:Loading and preparing annotation results... I0219 13:56:06.867704 13368 coco_tools.py:115] Loading and preparing annotation results... INFO:tensorflow:DONE (t=0.00s) I0219 13:56:06.867704 13368 coco_tools.py:137] DONE (t=0.00s) creating index... index created! 2020-02-19 13:56:06.901096: W tensorflow/core/framework/op_kernel.cc:1490] Invalid argument: TypeError: object of type &lt;class 'numpy.float64'&gt; cannot be safely interpreted as an integer. Traceback (most recent call last):    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\numpy\core\function_base.py""; line 117; in linspace     num = operator.index(num)  TypeError: 'numpy.float64' object cannot be interpreted as an integer   During handling of the above exception; another exception occurred:   Traceback (most recent call last):    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\ops\script_ops.py""; line 209; in __call__     ret = func(*args)    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\metrics\coco_evaluation.py""; line 384; in first_value_func     self._metrics = self.evaluate()    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\metrics\coco_evaluation.py""; line 215; in evaluate     coco_wrapped_groundtruth; coco_wrapped_detections; agnostic_mode=False)    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\metrics\coco_tools.py""; line 176; in __init__     iouType=iou_type)    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\pycocotools\cocoeval.py""; line 76; in __init__     self.params = Params(iouType=iouType) # parameters    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\pycocotools\cocoeval.py""; line 527; in __init__     self.setDetParams()    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\pycocotools\cocoeval.py""; line 507; in setDetParams     self.iouThrs = np.linspace(.5; 0.95; np.round((0.95 - .5) / .05) + 1; endpoint=True)    File ""&lt;__array_function__ internals&gt;""; line 6; in linspace    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\numpy\core\function_base.py""; line 121; in linspace     .format(type(num)))  TypeError: object of type &lt;class 'numpy.float64'&gt; cannot be safely interpreted as an integer.   Traceback (most recent call last):   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\client\session.py""; line 1356; in _do_call     return fn(*args)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\client\session.py""; line 1341; in _run_fn     options; feed_dict; fetch_list; target_list; run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\client\session.py""; line 1429; in _call_tf_sessionrun     run_metadata) tensorflow.python.framework.errors_impl.OutOfRangeError: 2 root error(s) found.   (0) Out of range: End of sequence          [[{{node IteratorGetNext}}]]   (1) Out of range: End of sequence          [[{{node IteratorGetNext}}]]          [[Loss/BoxClassifierLoss/assert_equal/Assert/Assert/data_4/_2449]] 0 successful operations. 0 derived errors ignored.  During handling of the above exception; another exception occurred:  Traceback (most recent call last):   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\evaluation.py""; line 272; in _evaluate_once     session.run(eval_ops; feed_dict)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 754; in run     run_metadata=run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1252; in run     run_metadata=run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1353; in run     raise six.reraise(*original_exc_info)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\six.py""; line 703; in reraise     raise value   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1338; in run     return self._sess.run(*args; **kwargs)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1411; in run     run_metadata=run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1169; in run     return self._sess.run(*args; **kwargs)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\client\session.py""; line 950; in run     run_metadata_ptr)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\client\session.py""; line 1173; in _run     feed_dict_tensor; options; run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\client\session.py""; line 1350; in _do_run     run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\client\session.py""; line 1370; in _do_call     raise type(e)(node_def; op; message) tensorflow.python.framework.errors_impl.OutOfRangeError: 2 root error(s) found.   (0) Out of range: End of sequence          [[node IteratorGetNext (defined at model_main.py:105) ]]   (1) Out of range: End of sequence          [[node IteratorGetNext (defined at model_main.py:105) ]]          [[Loss/BoxClassifierLoss/assert_equal/Assert/Assert/data_4/_2449]] 0 successful operations. 0 derived errors ignored.  Original stack trace for 'IteratorGetNext':   File ""model_main.py""; line 109; in &lt;module&gt;     tf.app.run()   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\platform\app.py""; line 40; in run     _run(main=main; argv=argv; flags_parser=_parse_flags_tolerate_undef)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\absl\app.py""; line 299; in run     _run_main(main; args)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\absl\app.py""; line 250; in _run_main     sys.exit(main(argv))   File ""model_main.py""; line 105; in main     tf.estimator.train_and_evaluate(estimator; train_spec; eval_specs[0])   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 473; in train_and_evaluate     return executor.run()   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 613; in run     return self.run_local()   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 714; in run_local     saving_listeners=saving_listeners)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 367; in train     loss = self._train_model(input_fn; hooks; saving_listeners)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1158; in _train_model     return self._train_model_default(input_fn; hooks; saving_listeners)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1192; in _train_model_default     saving_listeners)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1484; in _train_with_estimator_spec     _; loss = mon_sess.run([estimator_spec.train_op; estimator_spec.loss])   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 754; in run     run_metadata=run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1252; in run     run_metadata=run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1338; in run     return self._sess.run(*args; **kwargs)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1419; in run     run_metadata=run_metadata))   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\basic_session_run_hooks.py""; line 594; in after_run     if self._save(run_context.session; global_step):   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\basic_session_run_hooks.py""; line 619; in _save     if l.after_save(session; step):   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 519; in after_save     self._evaluate(global_step_value)  # updates self.eval_result   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 539; in _evaluate     self._evaluator.evaluate_and_export())   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 920; in evaluate_and_export     hooks=self._eval_spec.hooks)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 477; in evaluate     name=name)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 519; in _actual_eval     return _evaluate()   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 501; in _evaluate     self._evaluate_build_graph(input_fn; hooks; checkpoint_path))   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1501; in _evaluate_build_graph     self._call_model_fn_eval(input_fn; self.config))   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1534; in _call_model_fn_eval     input_fn; ModeKeys.EVAL)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1022; in _get_features_and_labels_from_input_fn     self._call_input_fn(input_fn; mode))   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\util.py""; line 65; in parse_input_fn_result     result = iterator.get_next()   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\data\ops\iterator_ops.py""; line 426; in get_next     output_shapes=self._structure._flat_shapes; name=name)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\ops\gen_dataset_ops.py""; line 1947; in iterator_get_next     output_shapes=output_shapes; name=name)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\framework\op_def_library.py""; line 788; in _apply_op_helper     op_def=op_def)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\util\deprecation.py""; line 507; in new_func     return func(*args; **kwargs)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\framework\ops.py""; line 3616; in create_op     op_def=op_def)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\framework\ops.py""; line 2005; in __init__     self._traceback = tf_stack.extract_stack()    During handling of the above exception; another exception occurred:   Traceback (most recent call last):    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\ops\script_ops.py""; line 209; in __call__     ret = func(*args)    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\metrics\coco_evaluation.py""; line 384; in first_value_func     self._metrics = self.evaluate()    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\metrics\coco_evaluation.py""; line 215; in evaluate     coco_wrapped_groundtruth; coco_wrapped_detections; agnostic_mode=False)    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\metrics\coco_tools.py""; line 176; in __init__     iouType=iou_type)    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\pycocotools\cocoeval.py""; line 76; in __init__     self.params = Params(iouType=iouType) # parameters    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\pycocotools\cocoeval.py""; line 527; in __init__     self.setDetParams()    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\pycocotools\cocoeval.py""; line 507; in setDetParams     self.iouThrs = np.linspace(.5; 0.95; np.round((0.95 - .5) / .05) + 1; endpoint=True)    File ""&lt;__array_function__ internals&gt;""; line 6; in linspace    File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\numpy\core\function_base.py""; line 121; in linspace     .format(type(num)))  TypeError: object of type &lt;class 'numpy.float64'&gt; cannot be safely interpreted as an integer.            [[node PyFunc_3 (defined at C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\metrics\coco_evaluation.py:394) ]] 0 successful operations. 0 derived errors ignored.  Original stack trace for 'PyFunc_3':   File ""model_main.py""; line 109; in &lt;module&gt;     tf.app.run()   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\platform\app.py""; line 40; in run     _run(main=main; argv=argv; flags_parser=_parse_flags_tolerate_undef)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\absl\app.py""; line 299; in run     _run_main(main; args)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\absl\app.py""; line 250; in _run_main     sys.exit(main(argv))   File ""model_main.py""; line 105; in main     tf.estimator.train_and_evaluate(estimator; train_spec; eval_specs[0])   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 473; in train_and_evaluate     return executor.run()   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 613; in run     return self.run_local()   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 714; in run_local     saving_listeners=saving_listeners)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 367; in train     loss = self._train_model(input_fn; hooks; saving_listeners)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1158; in _train_model     return self._train_model_default(input_fn; hooks; saving_listeners)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1192; in _train_model_default     saving_listeners)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1484; in _train_with_estimator_spec     _; loss = mon_sess.run([estimator_spec.train_op; estimator_spec.loss])   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 754; in run     run_metadata=run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1252; in run     run_metadata=run_metadata)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1338; in run     return self._sess.run(*args; **kwargs)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\monitored_session.py""; line 1419; in run     run_metadata=run_metadata))   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\basic_session_run_hooks.py""; line 594; in after_run     if self._save(run_context.session; global_step):   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\training\basic_session_run_hooks.py""; line 619; in _save     if l.after_save(session; step):   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 519; in after_save     self._evaluate(global_step_value)  # updates self.eval_result   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 539; in _evaluate     self._evaluator.evaluate_and_export())   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\training.py""; line 920; in evaluate_and_export     hooks=self._eval_spec.hooks)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 477; in evaluate     name=name)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 519; in _actual_eval     return _evaluate()   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 501; in _evaluate     self._evaluate_build_graph(input_fn; hooks; checkpoint_path))   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1501; in _evaluate_build_graph     self._call_model_fn_eval(input_fn; self.config))   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1537; in _call_model_fn_eval     features; labels; ModeKeys.EVAL; config)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow_estimator\python\estimator\estimator.py""; line 1146; in _call_model_fn     model_fn_results = self._model_fn(features=features; **kwargs)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\model_lib.py""; line 482; in model_fn     eval_config; list(category_index.values()); eval_dict)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\eval_util.py""; line 947; in get_eval_metric_ops_for_evaluators     eval_dict))   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\object_detection-0.1-py3.7.egg\object_detection\metrics\coco_evaluation.py""; line 394; in get_estimator_eval_metric_ops     first_value_op = tf.py_func(first_value_func; []; tf.float32)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\util\deprecation.py""; line 324; in new_func     return func(*args; **kwargs)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\ops\script_ops.py""; line 480; in py_func     return py_func_common(func; inp; Tout; stateful; name=name)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\ops\script_ops.py""; line 462; in py_func_common     func=func; inp=inp; Tout=Tout; stateful=stateful; eager=False; name=name)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\ops\script_ops.py""; line 285; in _internal_py_func     input=inp; token=token; Tout=Tout; name=name)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\ops\gen_script_ops.py""; line 159; in py_func     ""PyFunc""; input=input; token=token; Tout=Tout; name=name)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\framework\op_def_library.py""; line 788; in _apply_op_helper     op_def=op_def)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\util\deprecation.py""; line 507; in new_func     return func(*args; **kwargs)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\framework\ops.py""; line 3616; in create_op     op_def=op_def)   File ""C:\Users\luke9\Anaconda3\envs\tf_gpu\lib\site-packages\tensorflow\python\framework\ops.py""; line 2005; in __init__     self._traceback = tf_stack.extract_stack() </code></pre>  <p>This is missing some of the traceback because of the character limit; but it is all numpy TypeError's.</p>",<p>Try downgrading your nu,28988,88on. In my case; i had to downgrade it to 1.17.4 </p>
68034510,trying to return same eigen values and vectors results from numpy linalg eig as matlab eig does,python|matlab|numpy|eigenvalue|eigenvector,1,-1,0,2021-06-18 11:39:51.497 UTC,2021-06-18 11:54:52.947 UTC,<p>I am trying to convert MATLABs eig function into python. I am trying to return the same results as MATLABs eig does in python; and I am using numpy.linalg.eig to try and do this; but it won't return the same values &amp; vectors. I am currently using matlab engine to call the matlab code from jupyter notebooks. <br> This is my jupyter notebooks code:</p> <pre><code>    L_by_L_conj_trans = np.matmul(L; L_transpose_conjugate)     L_by_L_matlab = matlab.double(L_by_L_conj_trans.tolist())          print(&quot;\nTHE MATRIX:\n&quot;)     print(L_by_L_conj_trans)          from numpy.linalg import eig     values; vectors = eig(L_by_L_conj_trans)          e_values_and_e_vectors = eng.eig(L_by_L_matlab; nargout=2)     e_values = eng.diag(e_values_and_e_vectors[1])     e_vectors = e_values_and_e_vectors[0]     temp_e_values = eng.diag(e_values_and_e_vectors[1])               print(&quot;\nE VECTOR FOR MATLAB ENG:&quot;)     print(np.around(e_vectors; decimals = 4))     print(&quot;\n E VECTOR FOR NUMPY.EIG:&quot;)     print(np.around(vectors; decimals = 4))          print(&quot;\n\nE VALUES FOR MATLAB ENG:&quot;)     print(np.around(temp_e_values; decimals = 4))     print(&quot;\nE VALUES FOR NUMPY.EIG:&quot;)     print(np.around(values; decimals = 4)) </code></pre> <br> these are the outputs. <pre><code>THE MATRIX:  [[ 1672.2368  1304.6274   -66.8953  -521.5597  -585.8664  -790.4093    -408.2504  -885.7773  -273.2319  1314.0962   754.2331  1005.8871     393.6987   566.7153   289.5906   766.5018    59.1187  1305.7717    1085.8418  1061.5296  -981.1831 -1108.7448 -1035.0104  -874.2488   -1152.0593  -587.4416  -925.0897 -1058.5672   110.7806  -436.2941]  [ 1304.6274  1638.5357  -508.4575   -32.5526  -772.4504  -559.9273    -929.1771  -360.9589  -239.6309   768.5568  1327.8857   406.7315     965.1604   312.0877   603.4783    63.0486   770.1663  1000.8222    1315.5369  1080.7256 -1121.3858 -1013.4135 -1056.66   -1160.3771    -864.6467  -959.508   -598.2808 -1047.6508  -435.0306   102.7449]  [  -66.8953  -508.4575  1264.7399  -415.9097   954.5501    84.8193    1082.8333  -970.3041   550.9171   559.8939  -579.5      182.3674    -879.7133   765.624    -32.4137   915.6522  -919.4347  -259.3591    -578.1347   122.128    -75.245   -568.1983  -336.3324   900.2402    -327.6103   340.3344  -979.9465   395.3746   486.6892 -1108.709 ]  [ -521.5597   -32.5526  -415.9097  1255.2618    69.2946   935.0607    -889.8419   977.6712   542.3181  -561.3287   553.433   -875.0436     246.4148   -46.6133   751.6661  -908.667    907.7992  -571.706    -269.069    110.9489  -577.549    -66.6523  -332.4622  -383.3139     891.2615  -970.9352   315.0077   375.1399 -1074.2033   566.13  ]  [ -585.8664  -772.4504   954.5501    69.2946  1116.7921   620.8967     736.708   -423.9882   769.1498   -60.1744  -605.2978  -394.0691    -864.2684   475.785     75.9278   200.7536  -689.2869  -658.3288    -818.0084  -147.6736   118.1881  -148.1829   -20.6568  1019.1842     338.4077   162.0875  -553.5004   906.8372   -20.187   -802.6226]  [ -790.4093  -559.9273    84.8193   935.0607   620.8967  1103.3559    -292.8921   585.3663   766.5463  -582.738    -79.4964  -877.3192    -351.2562    73.8414   464.7332  -668.9234   178.7148  -796.5485    -685.1508  -153.1674  -158.6839   134.5685   -15.6088   298.8065    1031.2407  -527.1156   128.1918   899.4578  -786.0648    19.7015]  [ -408.2504  -929.1771  1082.8333  -889.8419   736.708   -292.8921    1772.2627  -954.2527   -29.5541   115.3221 -1143.484    390.5774    -978.9792   117.1943  -745.1069   957.7335 -1266.6559  -308.4591    -696.3893  -569.8382   887.3478    94.3312   466.4671  1329.8271    -358.8517  1463.1915  -560.0082   409.2915  1312.3746 -1003.7211]  [ -885.7773  -360.9589  -970.3041   977.6712  -423.9882   585.3663    -954.2527  1818.3831  -164.121  -1151.2921   119.3964  -890.1043     529.1385  -836.7234     9.2113 -1263.3481   987.7814  -619.946    -262.0244  -627.2201   149.6067   966.6453   540.8085  -457.2442    1188.2508  -504.024   1575.8039   279.5336  -880.6917  1524.4232]  [ -273.2319  -239.6309   550.9171   542.3181   769.1498   766.5463     -29.5541  -164.121    918.228     86.9774    66.3333  -499.7766    -462.5373   638.2798   639.4247   -74.0544   -89.1164  -493.4879    -500.8334   347.2257  -511.739   -498.1427  -509.3759   300.7608     342.898   -559.5687  -580.7794   577.2742  -541.9846  -518.3992]  [ 1314.0962   768.5568   559.8939  -561.3287   -60.1744  -582.738     115.3221 -1151.2921    86.9774  1497.8875   365.6539   944.721    -139.689    956.6734   311.327   1179.9674  -358.767    841.9698     489.3426  1021.8401  -922.0732 -1217.3966 -1070.9645  -390.6421   -1094.2483  -395.6316 -1224.1635  -730.2345   318.8729  -873.7583]  [  754.2331  1327.8857  -579.5      553.433   -605.2978   -79.4964   -1143.484    119.3964    66.3333   365.6539  1487.3986  -115.7606     983.3692   278.7341   934.4928  -358.5228  1175.5383   453.0208     885.7007   994.8795 -1200.2441  -912.7615 -1054.4111 -1132.7298    -392.9712 -1217.3632  -381.4163  -745.8815  -838.4371   378.208 ]  [ 1005.8871   406.7315   182.3674  -875.0436  -394.0691  -877.3192     390.5774  -890.1043  -499.7766   944.721   -115.7606  1388.235     -28.9094   187.0458  -377.0809  1125.4583  -493.102   1035.0343     542.4916   248.9978  -202.7081  -549.4141  -377.0669  -271.0633   -1007.1828   366.4488  -609.8339  -767.8338  1007.238   -494.9654]  [  393.6987   965.1604  -879.7133   246.4148  -864.2684  -351.2562    -978.9792   529.1385  -462.5373  -139.689    983.3692   -28.9094    1351.1613  -372.4145   222.5584  -530.0618  1167.9523   470.4503     996.3646   248.9961  -561.3745  -224.2025  -390.1503 -1012.3292    -263.3968  -668.4316   376.4798  -747.0418  -496.7554  1019.7668]  [  566.7153   312.0877   765.624    -46.6133   475.785     73.8414     117.1943  -836.7234   638.2798   956.6734   278.7341   187.0458    -372.4145  1058.6183   606.9181   676.3046  -280.1271   123.5983     -44.9316   875.7814  -848.958  -1048.8959  -953.8193    -7.9936    -510.2376  -544.6276 -1112.8701  -110.533   -134.0033  -860.4531]  [  289.5906   603.4783   -32.4137   751.6661    75.9278   464.7332    -745.1069     9.2113   639.4247   311.327    934.4928  -377.0809     222.5584   606.9181  1053.8515  -253.7967   648.956    -61.7748     139.492    874.9251 -1056.5503  -853.0907  -957.8459  -550.591       6.1055 -1100.1048  -575.3495  -117.2291  -848.0141  -103.71  ]  [  766.5018    63.0486   915.6522  -908.667    200.7536  -668.9234     957.7335 -1263.3481   -74.0544  1179.9674  -358.5228  1125.4583    -530.0618   676.3046  -253.7967  1538.1741  -875.7897   558.2818      51.2102   358.2182  -267.905   -821.8163  -558.7778   249.1165   -1024.2857   454.2618 -1082.7859  -449.29    1079.0482 -1035.7061]  [   59.1187   770.1663  -919.4347   907.7992  -689.2869   178.7148   -1266.6559   987.7814   -89.1164  -358.767   1175.5383  -493.102    1167.9523  -280.1271   648.956   -875.7897  1533.8702    31.1288     566.0777   329.5361  -810.013   -264.7564  -545.2707 -1059.5201     215.8949 -1084.2595   457.1963  -468.0846  -977.8071  1152.2603]  [ 1305.7717  1000.8222  -259.3591  -571.706   -658.3288  -796.5485    -308.4591  -619.946   -493.4879   841.9698   453.0208  1035.0343     470.4503   123.5983   -61.7748   558.2818    31.1288  1345.0612    1096.2847   544.6469  -562.8242  -662.655   -599.8857  -728.5503    -935.051   -251.9314  -506.8401  -920.4689   294.3521  -162.6059]  [ 1085.8418  1315.5369  -578.1347  -269.069   -818.0084  -685.1508    -696.3893  -262.0244  -500.8334   489.3426   885.7007   542.4916     996.3646   -44.9316   139.492     51.2102   566.0777  1096.2847    1394.7885   582.3308  -677.5779  -612.862   -631.079   -957.5032    -782.1503  -534.579   -271.883   -957.3816  -130.2972   264.3925]  [ 1061.5296  1080.7256   122.128    110.9489  -147.6736  -153.1674    -569.8382  -627.2201   347.2257  1021.8401   994.8795   248.9978     248.9961   875.7814   874.9251   358.2182   329.5361   544.6469     582.3308  1261.4653 -1208.7132 -1214.5693 -1209.1391  -720.3987    -701.0027  -983.0365  -999.2312  -622.8998  -451.8526  -455.4328]  [ -981.1831 -1121.3858   -75.245   -577.549    118.1881  -158.6839     887.3478   149.6067  -511.739   -922.0732 -1200.2441  -202.7081    -561.3745  -848.958  -1056.5503  -267.905   -810.013   -562.8242    -677.5779 -1208.7132  1949.046   1563.2136  1785.1945   988.0245     420.9193  1630.2179   885.1134   586.3745   752.4566    29.0243]  [-1108.7448 -1013.4135  -568.1983   -66.6523  -148.1829   134.5685      94.3312   966.6453  -498.1427 -1217.3966  -912.7615  -549.4141    -224.2025 -1048.8959  -853.0907  -821.8163  -264.7564  -662.655    -612.862  -1214.5693  1563.2136  1948.3819  1789.3347   456.9566     950.6646   862.9705  1626.6346   601.1836    64.697    726.1729]  [-1035.0104 -1056.66    -336.3324  -332.4622   -20.6568   -15.6088     466.4671   540.8085  -509.3759 -1070.9645 -1054.4111  -377.0669    -390.1503  -953.8193  -957.8459  -558.7778  -545.2707  -599.8857    -631.079  -1209.1391  1785.1945  1789.3347  1834.4847   717.0277     684.8884  1231.5105  1251.0325   601.1818   387.9073   364.679 ]  [ -874.2488 -1160.3771   900.2402  -383.3139  1019.1842   298.8065    1329.8271  -457.2442   300.7608  -390.6421 -1132.7298  -271.0633   -1012.3292    -7.9936  -550.591    249.1165 -1059.5201  -728.5503    -957.5032  -720.3987   988.0245   456.9566   717.0277  1504.9006     324.7611  1060.6166  -219.9223   997.901    557.4361  -779.1317]  [-1152.0593  -864.6467  -327.6103   891.2615   338.4077  1031.2407    -358.8517  1188.2508   342.898  -1094.2483  -392.9712 -1007.1828    -263.3968  -510.2376     6.1055 -1024.2857   215.8949  -935.051    -782.1503  -701.0027   420.9193   950.6646   684.8884   324.7611    1464.3562  -217.0687   958.3422  1009.1323  -740.089    543.7288]  [ -587.4416  -959.508    340.3344  -970.9352   162.0875  -527.1156    1463.1915  -504.024   -559.5687  -395.6316 -1217.3632   366.4488    -668.4316  -544.6276 -1100.1048   454.2618 -1084.2595  -251.9314    -534.579   -983.0365  1630.2179   862.9705  1231.5105  1060.6166    -217.0687  2028.4758   208.8387   231.2736  1498.3925  -432.993 ]  [ -925.0897  -598.2808  -979.9465   315.0077  -553.5004   128.1918    -560.0082  1575.8039  -580.7794 -1224.1635  -381.4163  -609.8339     376.4798 -1112.8701  -575.3495 -1082.7859   457.1963  -506.8401    -271.883   -999.2312   885.1134  1626.6346  1251.0325  -219.9223     958.3422   208.8387  2032.4677   198.9546  -342.8214  1510.6592]  [-1058.5672 -1047.6508   395.3746   375.1399   906.8372   899.4578     409.2915   279.5336   577.2742  -730.2345  -745.8815  -767.8338    -747.0418  -110.533   -117.2291  -449.29    -468.0846  -920.4689    -957.3816  -622.8998   586.3745   601.1836   601.1818   997.901    1009.1323   231.2736   198.9546  1239.2189  -282.8466  -282.1859]  [  110.7806  -435.0306   486.6892 -1074.2033   -20.187   -786.0648    1312.3746  -880.6917  -541.9846   318.8729  -838.4371  1007.238    -496.7554  -134.0033  -848.0141  1079.0482  -977.8071   294.3521    -130.2972  -451.8526   752.4566    64.697    387.9073   557.4361    -740.089   1498.3925  -342.8214  -282.8466  1740.6614  -629.8207]  [ -436.2941   102.7449 -1108.709    566.13    -802.6226    19.7015   -1003.7211  1524.4232  -518.3992  -873.7583   378.208   -494.9654    1019.7668  -860.4531  -103.71   -1035.7061  1152.2603  -162.6059     264.3925  -455.4328    29.0243   726.1729   364.679   -779.1317     543.7288  -432.993   1510.6592  -282.1859  -629.8207  1778.6173]]  E VECTOR FOR MATLAB ENG: [[-0.1826  0.0415  0.0073 -0.0526 -0.2615  0.1539 -0.1883  0.0069 -0.3068    0.1423 -0.0983 -0.1769  0.2225  0.003   0.0107  0.3313 -0.1421 -0.3593   -0.1252 -0.0403  0.2294  0.1265  0.3098  0.0134 -0.0568 -0.2024 -0.2167    0.1255 -0.0792 -0.2744]  [-0.1826  0.0664  0.0187  0.0602  0.392   0.0876 -0.1551 -0.226   0.2537   -0.1418  0.0705  0.1744  0.2198 -0.1101  0.0564  0.2404 -0.1873  0.297   -0.1163  0.0108 -0.3147  0.0443  0.2449 -0.0503 -0.0203  0.194  -0.2205    0.1039  0.0763 -0.2771]  [-0.1826 -0.2298 -0.0438  0.3856  0.0433  0.1023  0.0927  0.0579 -0.1799    0.2621  0.3516 -0.0832  0.0864 -0.2361  0.1442 -0.0022 -0.2974  0.0129    0.3003  0.0619 -0.0843  0.0183 -0.0568 -0.3352  0.0361 -0.0046  0.1397   -0.2018 -0.2368  0.0111]  [-0.1826 -0.21   -0.0656 -0.3483 -0.0269  0.1421  0.0785 -0.1322  0.2117    0.1056  0.4019  0.0094  0.1098  0.2667 -0.0352  0.2498  0.08   -0.0348    0.3517  0.0177  0.096   0.1098  0.0089  0.3478 -0.0279  0.0051  0.1206   -0.2186  0.2257  0.0038]  [-0.1826  0.4032  0.0412 -0.4674  0.1237 -0.2957  0.2258  0.0724 -0.0078    0.1753 -0.0743 -0.0162  0.0692  0.1282  0.158   0.0925 -0.3037  0.0316   -0.107   0.1154  0.0583 -0.157  -0.0754 -0.2327 -0.1461  0.0454 -0.0155   -0.283  -0.1248  0.0918]  [-0.1826  0.4003  0.0386  0.4908 -0.2827 -0.1577  0.1636  0.0332  0.1385   -0.1958  0.0572  0.0422  0.0606 -0.1543  0.0412  0.2903  0.1485 -0.0444   -0.0071 -0.1521 -0.027  -0.1069 -0.0463  0.2252 -0.1841 -0.0617 -0.0277   -0.2917  0.1086  0.0885]  [-0.1826  0.0607 -0.0321 -0.1778  0.0739  0.1155  0.2033  0.1267 -0.091   -0.3598 -0.157   0.1075  0.1933 -0.2063 -0.1923  0.0082  0.317  -0.2151    0.2077  0.181  -0.1113  0.1753  0.2834 -0.1042 -0.0275  0.2128  0.226   -0.0027 -0.3013  0.1357]  [-0.1826  0.0525 -0.0089  0.1494 -0.0622  0.1396  0.1612  0.037   0.1508    0.0959 -0.4364 -0.1293  0.1959  0.157  -0.0424 -0.2856 -0.2631  0.2637    0.1572 -0.0701  0.0453  0.1301  0.3169  0.0033 -0.0069 -0.2062  0.2483    0.0238  0.3107  0.1273]  [-0.1826 -0.5533 -0.0399 -0.0124  0.0307 -0.1319 -0.2158  0.0559  0.0263   -0.2146 -0.4519  0.0466  0.1553 -0.0314  0.0431  0.1466 -0.0286 -0.0071    0.0332 -0.0001  0.0752 -0.3907 -0.1571  0.0205  0.0181 -0.0099 -0.0396   -0.3187 -0.0091 -0.0121]  [-0.1826 -0.077  -0.025   0.101   0.3459 -0.0993  0.168   0.4549  0.2062   -0.0851  0.0458  0.0999 -0.1458  0.2768  0.0957  0.0327  0.1237 -0.0964   -0.0925 -0.3301  0.1159  0.2269  0.0149 -0.0722  0.2014 -0.2797 -0.027   -0.0127 -0.1762 -0.2282]  [-0.1826 -0.094  -0.0395 -0.1248 -0.4195  0.0264  0.0411  0.4529  0.1518    0.0228 -0.0234 -0.0753 -0.209  -0.1895  0.228  -0.0478 -0.0548  0.1072   -0.1489  0.3034 -0.1782  0.1749 -0.0165  0.0901  0.1657  0.2858 -0.0478   -0.0224  0.1693 -0.2313]  [-0.1826 -0.0027 -0.0019  0.0172 -0.0322  0.0756  0.0458  0.0465 -0.1913   -0.0468  0.1034  0.2284  0.3941  0.0596  0.131  -0.1675  0.1238  0.3103   -0.2141  0.2923  0.0862  0.0199 -0.3367  0.2372 -0.1922 -0.2841  0.1374    0.2085 -0.1837 -0.1247]  [-0.1826  0.0013 -0.0048 -0.0211  0.0412  0.0844  0.0448 -0.0889  0.2033    0.1457 -0.0428 -0.2958  0.3212 -0.0615  0.0944 -0.1528  0.2349 -0.2912   -0.1317 -0.3078 -0.0238 -0.0012 -0.3759 -0.2338 -0.1354  0.2965  0.1282    0.1723  0.1978 -0.1276]  [-0.1826  0.2821  0.028  -0.1657 -0.2474  0.3454 -0.2994 -0.0994  0.091   -0.3156  0.1565  0.1149 -0.0292  0.0254 -0.02   -0.369  -0.101  -0.0073    0.099  -0.1975  0.0544 -0.1913 -0.074  -0.1488  0.2771 -0.1064 -0.0276   -0.2126 -0.1195 -0.1438]  [-0.1826  0.2809  0.0487  0.146   0.3831  0.1877 -0.1693  0.1026 -0.2139    0.3592 -0.1486 -0.1412 -0.0952  0.013  -0.1751 -0.0506  0.3049  0.025    0.0758  0.2452  0.0334 -0.1635 -0.0477  0.2111  0.2378  0.097  -0.0445   -0.223   0.0999 -0.1478]  [-0.1826  0.0463  0.042  -0.1197 -0.1352 -0.1017 -0.1287 -0.3545  0.068    0.1572 -0.2818 -0.1011 -0.3011 -0.1252  0.0106  0.2613  0.1462  0.2234    0.1172 -0.1155 -0.2129  0.2866 -0.2135 -0.0314  0.0769 -0.2203  0.2542    0.0368 -0.2837 -0.1029]  [-0.1826  0.0516  0.0526  0.1474  0.1327 -0.1646 -0.0516 -0.2167 -0.3428   -0.3161 -0.0563  0.1708 -0.2099  0.1618  0.1133 -0.0227 -0.2815 -0.2255    0.0349  0.1019  0.1768  0.3071 -0.1927  0.0413  0.0461  0.237   0.2351    0.0153  0.2829 -0.1091]  [-0.1826 -0.0054 -0.0047  0.01    0.1377 -0.0715  0.048  -0.0957  0.3414   -0.0532 -0.0059 -0.1057 -0.3144 -0.2686 -0.0041 -0.221  -0.0577 -0.1716    0.2666  0.2763  0.2867 -0.1384  0.0313  0.0602 -0.3899 -0.1726 -0.1627    0.2106 -0.0576 -0.1961]  [-0.1826 -0.0189 -0.0079 -0.0087 -0.1718 -0.0551  0.0572  0.157  -0.3294    0.0212 -0.0148  0.1271 -0.1656  0.3304 -0.1398 -0.013   0.1142  0.2066    0.3478 -0.2289 -0.2363 -0.2101  0.0098 -0.1472 -0.3523  0.167  -0.181    0.2064  0.0577 -0.2062]  [-0.1826 -0.1742 -0.0162  0.0115 -0.1346 -0.3728  0.4262 -0.3889 -0.1039    0.0546  0.094  -0.0231  0.0669 -0.0372 -0.2495 -0.2713  0.1107  0.0141   -0.1875 -0.0007 -0.0085 -0.0616  0.1824  0.0257  0.3114 -0.005  -0.1628   -0.108  -0.0089 -0.2459]  [-0.1826  0.066  -0.4506 -0.0345  0.0645 -0.0675 -0.0152  0.0312 -0.1238   -0.209   0.0626 -0.379   0.0241 -0.0979 -0.0189  0.0637 -0.0294  0.3407    0.086  -0.1459  0.3142  0.0997 -0.1168  0.0836  0.1665  0.1645 -0.2771    0.1811 -0.0787  0.2854]  [-0.1826  0.0645 -0.444   0.0527 -0.0571 -0.037  -0.049  -0.042   0.1188    0.2063 -0.1059  0.3843  0.0501  0.078  -0.065  -0.0238 -0.0492 -0.3341    0.0784  0.1663 -0.2864  0.0514 -0.1842 -0.0601  0.1737 -0.1731 -0.2758    0.1681  0.0959  0.2847]  [-0.1826 -0.0752  0.7262 -0.0182 -0.0167  0.0614  0.104   0.0793  0.0449   -0.0225 -0.0055 -0.0052  0.0619 -0.0391 -0.2336  0.0723 -0.1221  0.0064    0.0932  0.0171  0.0181  0.1071 -0.2462  0.0084  0.173  -0.0072 -0.3238    0.1777  0.0096  0.2857]  [-0.1826 -0.0669  0.0715  0.2113 -0.1449 -0.188  -0.4102 -0.0589  0.2205    0.0754  0.1064 -0.0559 -0.0021  0.3868 -0.1107 -0.1157  0.1888  0.0703   -0.1772  0.2327  0.152   0.2104  0.1637 -0.2276 -0.1819  0.1982 -0.0372   -0.1326 -0.1884  0.2035]  [-0.1826 -0.0649  0.0767 -0.2001  0.1511 -0.2671 -0.327   0.1245 -0.2238    0.0398  0.1504 -0.0176  0.0083 -0.3232  0.0502 -0.3163  0.0378 -0.0481   -0.0573 -0.2632 -0.249   0.2023  0.1343  0.1924 -0.2218 -0.1931 -0.05   -0.1619  0.1764  0.1944]  [-0.1826 -0.0274  0.1203  0.0199 -0.0365  0.0318  0.014  -0.1095  0.0121    0.274  -0.0638  0.3346 -0.0926 -0.0528  0.462  -0.0718  0.062  -0.0205    0.0045 -0.2381  0.2066 -0.1993  0.2468  0.2573  0.1213  0.3009  0.0621    0.2078 -0.2198  0.2102]  [-0.1826 -0.027   0.1035 -0.0199  0.0456  0.0063  0.0212 -0.0979 -0.1085   -0.2236  0.1515 -0.2916 -0.119   0.1516  0.3995  0.1133  0.2512 -0.0328   -0.053   0.2226 -0.1899 -0.2828  0.1717 -0.2264  0.1649 -0.2863  0.0725    0.1969  0.235   0.2038]  [-0.1826 -0.1678 -0.0942 -0.0085  0.0645  0.54    0.2705 -0.1564 -0.1014   -0.0172 -0.0602  0.0289 -0.3534  0.013  -0.0568  0.0025 -0.0109  0.0174   -0.4255 -0.0675 -0.0311  0.0703 -0.0372 -0.0224 -0.2921 -0.0087 -0.145   -0.233  -0.0057  0.1956]  [-0.1826 -0.0081 -0.0458  0.0534  0.0304 -0.0422 -0.0607  0.0931  0.0726   -0.0514  0.1137 -0.2598 -0.0851  0.168  -0.31    0.0073 -0.347  -0.1763   -0.2066 -0.0384 -0.3057 -0.2793  0.0058  0.3599  0.0139  0.0776  0.3237    0.2128 -0.2653  0.0571]  [-0.1826 -0.0146 -0.0503 -0.0767 -0.031  -0.0478 -0.0957  0.1351  0.0127    0.1154  0.1613  0.288  -0.1171 -0.2863 -0.3847  0.2188  0.0323  0.1378   -0.2036 -0.0483  0.3107 -0.1788  0.0523 -0.2851  0.0511 -0.0606  0.3345    0.1752  0.2932  0.0486]]   E VECTOR FOR NUMPY.EIG: [[ 0.2744  0.0792 -0.1255 -0.2167  0.2024 -0.0568 -0.0134 -0.3098 -0.1265   -0.2294  0.0403 -0.1252  0.3593 -0.1421  0.3313  0.0107  0.003  -0.2225    0.1769 -0.1826 -0.0983  0.1423 -0.0415 -0.0073  0.0526  0.2615 -0.1539    0.1883 -0.3068 -0.0069]  [ 0.2771 -0.0763 -0.1039 -0.2205 -0.194  -0.0203  0.0503 -0.2449 -0.0443    0.3147 -0.0108 -0.1163 -0.297  -0.1873  0.2404  0.0564 -0.1101 -0.2198   -0.1744 -0.1826  0.0705 -0.1418 -0.0664 -0.0187 -0.0602 -0.392  -0.0876    0.1551  0.2537  0.226 ]  [-0.0111  0.2368  0.2018  0.1397  0.0046  0.0361  0.3352  0.0568 -0.0183    0.0843 -0.0619  0.3003 -0.0129 -0.2974 -0.0022  0.1442 -0.2361 -0.0864    0.0832 -0.1826  0.3516  0.2621  0.2298  0.0438 -0.3856 -0.0433 -0.1023   -0.0927 -0.1799 -0.0579]  [-0.0038 -0.2257  0.2186  0.1206 -0.0051 -0.0279 -0.3478 -0.0089 -0.1098   -0.096  -0.0177  0.3517  0.0348  0.08    0.2498 -0.0352  0.2667 -0.1098   -0.0094 -0.1826  0.4019  0.1056  0.21    0.0656  0.3483  0.0269 -0.1421   -0.0785  0.2117  0.1322]  [-0.0918  0.1248  0.283  -0.0155 -0.0454 -0.1461  0.2327  0.0754  0.157   -0.0583 -0.1154 -0.107  -0.0316 -0.3037  0.0925  0.158   0.1282 -0.0692    0.0162 -0.1826 -0.0743  0.1753 -0.4032 -0.0412  0.4674 -0.1237  0.2957   -0.2258 -0.0078 -0.0724]  [-0.0885 -0.1086  0.2917 -0.0277  0.0617 -0.1841 -0.2252  0.0463  0.1069    0.027   0.1521 -0.0071  0.0444  0.1485  0.2903  0.0412 -0.1543 -0.0606   -0.0422 -0.1826  0.0572 -0.1958 -0.4003 -0.0386 -0.4908  0.2827  0.1577   -0.1636  0.1385 -0.0332]  [-0.1357  0.3013  0.0027  0.226  -0.2128 -0.0275  0.1042 -0.2834 -0.1753    0.1113 -0.181   0.2077  0.2151  0.317   0.0082 -0.1923 -0.2063 -0.1933   -0.1075 -0.1826 -0.157  -0.3598 -0.0607  0.0321  0.1778 -0.0739 -0.1155   -0.2033 -0.091  -0.1267]  [-0.1273 -0.3107 -0.0238  0.2483  0.2062 -0.0069 -0.0033 -0.3169 -0.1301   -0.0453  0.0701  0.1572 -0.2637 -0.2631 -0.2856 -0.0424  0.157  -0.1959    0.1293 -0.1826 -0.4364  0.0959 -0.0525  0.0089 -0.1494  0.0622 -0.1396   -0.1612  0.1508 -0.037 ]  [ 0.0121  0.0091  0.3187 -0.0396  0.0099  0.0181 -0.0205  0.1571  0.3907   -0.0752  0.0001  0.0332  0.0071 -0.0286  0.1466  0.0431 -0.0314 -0.1553   -0.0466 -0.1826 -0.4519 -0.2146  0.5533  0.0399  0.0124 -0.0307  0.1319    0.2158  0.0263 -0.0559]  [ 0.2282  0.1762  0.0127 -0.027   0.2797  0.2014  0.0722 -0.0149 -0.2269   -0.1159  0.3301 -0.0925  0.0964  0.1237  0.0327  0.0957  0.2768  0.1458   -0.0999 -0.1826  0.0458 -0.0851  0.077   0.025  -0.101  -0.3459  0.0993   -0.168   0.2062 -0.4549]  [ 0.2313 -0.1693  0.0224 -0.0478 -0.2858  0.1657 -0.0901  0.0165 -0.1749    0.1782 -0.3034 -0.1489 -0.1072 -0.0548 -0.0478  0.228  -0.1895  0.209    0.0753 -0.1826 -0.0234  0.0228  0.094   0.0395  0.1248  0.4195 -0.0264   -0.0411  0.1518 -0.4529]  [ 0.1247  0.1837 -0.2085  0.1374  0.2841 -0.1922 -0.2372  0.3367 -0.0199   -0.0862 -0.2923 -0.2141 -0.3103  0.1238 -0.1675  0.131   0.0596 -0.3941   -0.2284 -0.1826  0.1034 -0.0468  0.0027  0.0019 -0.0172  0.0322 -0.0756   -0.0458 -0.1913 -0.0465]  [ 0.1276 -0.1978 -0.1723  0.1282 -0.2965 -0.1354  0.2338  0.3759  0.0012    0.0238  0.3078 -0.1317  0.2912  0.2349 -0.1528  0.0944 -0.0615 -0.3212    0.2958 -0.1826 -0.0428  0.1457 -0.0013  0.0048  0.0211 -0.0412 -0.0844   -0.0448  0.2033  0.0889]  [ 0.1438  0.1195  0.2126 -0.0276  0.1064  0.2771  0.1488  0.074   0.1913   -0.0544  0.1975  0.099   0.0073 -0.101  -0.369  -0.02    0.0254  0.0292   -0.1149 -0.1826  0.1565 -0.3156 -0.2821 -0.028   0.1657  0.2474 -0.3454    0.2994  0.091   0.0994]  [ 0.1478 -0.0999  0.223  -0.0445 -0.097   0.2378 -0.2111  0.0477  0.1635   -0.0334 -0.2452  0.0758 -0.025   0.3049 -0.0506 -0.1751  0.013   0.0952    0.1412 -0.1826 -0.1486  0.3592 -0.2809 -0.0487 -0.146  -0.3831 -0.1877    0.1693 -0.2139 -0.1026]  [ 0.1029  0.2837 -0.0368  0.2542  0.2203  0.0769  0.0314  0.2135 -0.2866    0.2129  0.1155  0.1172 -0.2234  0.1462  0.2613  0.0106 -0.1252  0.3011    0.1011 -0.1826 -0.2818  0.1572 -0.0463 -0.042   0.1197  0.1352  0.1017    0.1287  0.068   0.3545]  [ 0.1091 -0.2829 -0.0153  0.2351 -0.237   0.0461 -0.0413  0.1927 -0.3071   -0.1768 -0.1019  0.0349  0.2255 -0.2815 -0.0227  0.1133  0.1618  0.2099   -0.1708 -0.1826 -0.0563 -0.3161 -0.0516 -0.0526 -0.1474 -0.1327  0.1646    0.0516 -0.3428  0.2167]  [ 0.1961  0.0576 -0.2106 -0.1627  0.1726 -0.3899 -0.0602 -0.0313  0.1384   -0.2867 -0.2763  0.2666  0.1716 -0.0577 -0.221  -0.0041 -0.2686  0.3144    0.1057 -0.1826 -0.0059 -0.0532  0.0054  0.0047 -0.01   -0.1377  0.0715   -0.048   0.3414  0.0957]  [ 0.2062 -0.0577 -0.2064 -0.181  -0.167  -0.3523  0.1472 -0.0098  0.2101    0.2363  0.2289  0.3478 -0.2066  0.1142 -0.013  -0.1398  0.3304  0.1656   -0.1271 -0.1826 -0.0148  0.0212  0.0189  0.0079  0.0087  0.1718  0.0551   -0.0572 -0.3294 -0.157 ]  [ 0.2459  0.0089  0.108  -0.1628  0.005   0.3114 -0.0257 -0.1824  0.0616    0.0085  0.0007 -0.1875 -0.0141  0.1107 -0.2713 -0.2495 -0.0372 -0.0669    0.0231 -0.1826  0.094   0.0546  0.1742  0.0162 -0.0115  0.1346  0.3728   -0.4262 -0.1039  0.3889]  [-0.2854  0.0787 -0.1811 -0.2771 -0.1645  0.1665 -0.0836  0.1168 -0.0997   -0.3142  0.1459  0.086  -0.3407 -0.0294  0.0637 -0.0189 -0.0979 -0.0241    0.379  -0.1826  0.0626 -0.209  -0.066   0.4506  0.0345 -0.0645  0.0675    0.0152 -0.1238 -0.0312]  [-0.2847 -0.0959 -0.1681 -0.2758  0.1731  0.1737  0.0601  0.1842 -0.0514    0.2864 -0.1663  0.0784  0.3341 -0.0492 -0.0238 -0.065   0.078  -0.0501   -0.3843 -0.1826 -0.1059  0.2063 -0.0645  0.444  -0.0527  0.0571  0.037    0.049   0.1188  0.042 ]  [-0.2857 -0.0096 -0.1777 -0.3238  0.0072  0.173  -0.0084  0.2462 -0.1071   -0.0181 -0.0171  0.0932 -0.0064 -0.1221  0.0723 -0.2336 -0.0391 -0.0619    0.0052 -0.1826 -0.0055 -0.0225  0.0752 -0.7262  0.0182  0.0167 -0.0614   -0.104   0.0449 -0.0793]  [-0.2035  0.1884  0.1326 -0.0372 -0.1982 -0.1819  0.2276 -0.1637 -0.2104   -0.152  -0.2327 -0.1772 -0.0703  0.1888 -0.1157 -0.1107  0.3868  0.0021    0.0559 -0.1826  0.1064  0.0754  0.0669 -0.0715 -0.2113  0.1449  0.188    0.4102  0.2205  0.0589]  [-0.1944 -0.1764  0.1619 -0.05    0.1931 -0.2218 -0.1924 -0.1343 -0.2023    0.249   0.2632 -0.0573  0.0481  0.0378 -0.3163  0.0502 -0.3232 -0.0083    0.0176 -0.1826  0.1504  0.0398  0.0649 -0.0767  0.2001 -0.1511  0.2671    0.327  -0.2238 -0.1245]  [-0.2102  0.2198 -0.2078  0.0621 -0.3009  0.1213 -0.2573 -0.2468  0.1993   -0.2066  0.2381  0.0045  0.0205  0.062  -0.0718  0.462  -0.0528  0.0926   -0.3346 -0.1826 -0.0638  0.274   0.0274 -0.1203 -0.0199  0.0365 -0.0318   -0.014   0.0121  0.1095]  [-0.2038 -0.235  -0.1969  0.0725  0.2863  0.1649  0.2264 -0.1717  0.2828    0.1899 -0.2226 -0.053   0.0328  0.2512  0.1133  0.3995  0.1516  0.119    0.2916 -0.1826  0.1515 -0.2236  0.027  -0.1035  0.0199 -0.0456 -0.0063   -0.0212 -0.1085  0.0979]  [-0.1956  0.0057  0.233  -0.145   0.0087 -0.2921  0.0224  0.0372 -0.0703    0.0311  0.0675 -0.4255 -0.0174 -0.0109  0.0025 -0.0568  0.013   0.3534   -0.0289 -0.1826 -0.0602 -0.0172  0.1678  0.0942  0.0085 -0.0645 -0.54   -0.2705 -0.1014  0.1564]  [-0.0571  0.2653 -0.2128  0.3237 -0.0776  0.0139 -0.3599 -0.0058  0.2793    0.3057  0.0384 -0.2066  0.1763 -0.347   0.0073 -0.31    0.168   0.0851    0.2598 -0.1826  0.1137 -0.0514  0.0081  0.0458 -0.0534 -0.0304  0.0422    0.0607  0.0726 -0.0931]  [-0.0486 -0.2932 -0.1752  0.3345  0.0606  0.0511  0.2851 -0.0523  0.1788   -0.3107  0.0483 -0.2036 -0.1378  0.0323  0.2188 -0.3847 -0.2863  0.1171   -0.288  -0.1826  0.1613  0.1154  0.0146  0.0503  0.0767  0.031   0.0478    0.0957  0.0127 -0.1351]]   E VALUES FOR MATLAB ENG: [[    0.    ]  [    3.6565]  [    4.4332]  [    7.054 ]  [    8.1664]  [   10.4131]  [   13.2693]  [   15.9649]  [   16.9179]  [   20.8622]  [   24.7438]  [   28.2782]  [   38.9563]  [   42.4918]  [   55.1742]  [   62.0935]  [   65.703 ]  [   76.9751]  [  143.6789]  [  165.5467]  [  239.4348]  [  263.0559]  [  284.2856]  [  779.4868]  [  919.7508]  [ 1507.522 ]  [ 1543.3857]  [ 8389.9546]  [13716.3716]  [16543.2911]]  E VALUES FOR NUMPY.EIG: [16543.2911 13716.3716  8389.9546  1543.3857  1507.522    919.7508    779.4868   284.2856   263.0559   239.4348   165.5467   143.6789     76.9751    65.703     62.0935    55.1742    42.4918    38.9563     28.2782     0.        24.7438    20.8622     3.6565     4.4332      7.054      8.1664    10.4131    13.2693    16.9179    15.9649] </code></pre>,"<p>From what I see; the Matlab and NumPy Eigenvalues are the same; but ordered differently. Try to order the NumPy Eigenvalues usi,27349,304 href=""https://numpy.org/doc/stable/reference/generated/numpy.sort.html"" rel=""nofollow noreferrer"">np.sort()</a> and see if the Eigenvalues are the same.</p>"
50157416,BGR8 raw image conversion to numpy python,python|numpy|opencv|python-imaging-library,1,0,0,2018-05-03 14:23:42.83 UTC,2018-08-01 12:08:10.17 UTC,"<p>So far i have tested acquiring images from a camera in the raw BGR8 format into a numpy array; I am at the point in which i can get access to the data however the image seems to have visible image artifacts (vertical lines etc) and only displays in greyscale.</p>  <p>The following code is used to acquire the image in BGR8 format:</p>  <pre><code>image=ctrl.GetImageWindow(100;100; 20;20) # offset 100;100; 20x20 grid of pixels  data = numpy.array(image) </code></pre>  <p>Data returns the following 20-wide and 60-long numpy array - from some testing; the first ""row"" is Blue; the second; Green; the third Red recursively</p>  <pre><code>49  48  49  57  68  76  62  59  46  54  62  58  68  64  45  60  65  51  56  70 76  72  62  62  66  59  65  62  53  65  62  67  75  58  59  57  67  64  64  63 54  64  55  67  67  61  64  43  66  60  59  73  48  74  88  77  65  54  69  57 80  59  42  56  79  51  53  67  64  40  53  68  74  83  60  81  53  37  42  72 61  71  73  75  79  63  64  66  70  60  64  61  68  64  56  60  60  61  67  61 60  62  69  83  66  64  76  63  62  72  66  70  58  61  77  83  76  71  75  63 58  75  74  61  67  54  58  59  55  46  54  61  52  81  56  59  53  66  45  50 49  60  67  63  64  66  76  63  69  62  71  66  67  63  57  55  61  54  63  63 74  62  64  73  59  64  56  68  67  54  65  70  60  52  53  59  71  66  63  68 34  56  53  57  65  52  65  65  75  73  72  59  40  61  64  72  54  72  66  55 59  63  65  69  63  60  70  68  67  59  60  69  69  74  69  64  64  60  63  66 75  66  73  61  52  65  53  58  58  44  51  56  75  56  61  53  52  62  62  60 54  41  39  38  49  29  48  58  60  72  56  53  52  57  66  68  65  70  54  77 59  69  59  78  70  66  71  63  76  74  67  63  64  63  59  68  68  61  63  55 68  63  68  64  53  65  63  63  49  55  53  60  60  51  66  69  49  55  54  52 71  61  58  47  69  48  45  55  51  69  65  72  79  58  77  60  65  69  56  62 61  46  54  62  75  77  68  64  73  69  66  64  55  63  68  62  65  71  67  59 72  69  69  63  68  64  59  59  70  65  55  69  46  54  70  66  62  60  65  52 61  57  67  71  85  62  50  73  63  80  59  71  105 78  57  80  73  74  79  70 66  54  65  60  55  55  66  56  55  57  68  66  51  64  49  47  51  53  62  66 73  57  61  63  72  73  61  68  52  64  58  62  58  61  69  72  69  82  80  60 77  61  69  57  76  59  40  57  55  62  60  45  71  57  64  54  81  81  63  71 68  59  66  54  73  64  78  69  63  66  73  72  57  74  56  55  50  48  61  62 52  61  68  64  71  70  71  74  67  70  52  69  56  63  81  62  55  64  72  62 76  75  75  54  79  49  46  42  31  51  48  56  65  55  58  43  61  75  52  69 60  54  56  63  65  69  79  68  67  72  64  66  71  67  62  61  66  61  67  58 58  63  68  63  56  59  63  55  58  62  52  70  60  68  71  67  59  63  61  59 86  59  56  78  66  67  46  69  45  52  70  73  58  71  67  50  55  51  60  71 64  65  58  52  60  68  63  59  71  85  57  53  64  62  69  60  54  62  70  58 51  53  71  60  59  76  80  69  64  76  74  62  67  61  56  57  69  66  62  67 57  65  73  54  55  52  50  54  65  78  70  62  59  77  71  57  69  55  81  78 60  70  51  61  75  72  66  57  59  51  61  62  63  61  65  67  57  67  70  56 62  56  82  68  58  56  74  63  65  69  68  69  79  74  65  53  61  58  64  70 44  56  63  75  58  55  65  72  73  65  65  76  76  56  51  76  75  63  51  56 73  73  61  69  67  74  68  66  64  59  73  60  68  69  63  66  59  66  62  53 57  62  73  65  62  61  57  50  63  75  68  58  54  65  74  54  68  60  71  63 64  50  81  67  39  36  70  84  77  68  64  56  63  66  73  81  63  50  22  24 74  71  59  60  77  71  49  51  59  58  69  77  65  72  51  53  48  53  40  27 55  53  56  62  65  73  68  74  69  67  68  47  43  58  72  63  67  56  69  60 61  61  78  67  47  70  88  76  70  76  80  70  60  72  52  67  64  36  25  9 70  79  53  59  75  73  59  50  51  60  62  68  74  61  59  56  44  31  20  5 62  49  51  67  65  54  67  76  74  71  57  54  61  48  64  64  64  57  63  63 61  67  69  60  46  68  60  58  54  73  72  75  68  59  46  55  43  34  32  5 63  68  58  71  64  49  60  68  52  56  63  56  56  66  52  43  35  24  14  6 49  56  57  64  71  66  68  62  71  65  66  57  68  60  66  72  67  59  64  60 76  74  69  45  41  68  66  68  76  77  50  67  65  77  62  46  28  21  25  7 64  59  63  64  73  67  62  58  55  48  63  61  60  40  33  22  26  20  19  23 57  56  59  69  75  73  49  72  67  69  70  68  70  58  57  56  63  58  56  54 79  56  68  66  43  73  67  63  74  65  75  50  38  42  42  24  23  4   22  27 60  55  63  67  66  57  70  64  71  58  48  46  44  18  20  8   13  13  21  20 60  58  61  72  64  62  62  55  58  72  68  64  72  63  67  67  66  66  67  57 69  58  55  65  48  60  64  64  68  57  50  22  18  44  24  18  24  19  34  35 64  68  66  73  72  71  65  60  67  48  39  22  25  9   1   8   17  21  20  22 62  61  61  54  62  60  62  53  50  59  58  64  67  63  72  74  71  59  59  45 75  50  55  57  81  64  72  60  59  40  29  19  18  47  27  20  24  25  19  43 68  68  69  65  57  64  63  44  51  47  29  14  16  6   0   16  25  24  13  17 65  76  69  56  62  67  70  71  62  62  67  75  70  61  66  74  63  57  68  59 72  66  70  70  65  60  81  41  25  32  20  21  6   10  17  17  27  18  29  43 58  54  60  57  54  58  49  27  32  27  13  2   18  14  17  22  25  26  32  22 67  75  75  74  81  76  66  79  80  58  60  65  60  63  55  42  55  60  66  79 </code></pre>  <p>The output of <code>cv2.imwrite(""test-raw.png""; data)</code> is the following image which is grey (it should have a red line)</p>  <p><a href=""https://i.stack.imgur.com/I1mp5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/I1mp5.png"" alt=""raw-image""></a></p>  <p>I also tried adding in <code>data = numpy.array(image).view(numpy.uint8)</code> and the output was the following:</p>  <p>Data returns the following 80-wide and 60-long numpy array</p>  <pre><code>49  0   0   0   62  0   0   0   49  0   0   0   45  0   0   0   58  0   0   0   63  0   0   0   51  0   0   0   59  0   0   0   50  0   0   0   45  0   0   0   45  0   0   0   38  0   0   0   59  0   0   0   62  0   0   0   42  0   0   0   39  0   0   0   45  0   0   0   57  0   0   0   74  0   0   0   58  0   0   0 51  0   0   0   48  0   0   0   44  0   0   0   56  0   0   0   51  0   0   0   40  0   0   0   40  0   0   0   33  0   0   0   52  0   0   0   45  0   0   0   43  0   0   0   55  0   0   0   50  0   0   0   51  0   0   0   51  0   0   0   57  0   0   0   49  0   0   0   42  0   0   0   36  0   0   0   54  0   0   0 41  0   0   0   44  0   0   0   48  0   0   0   50  0   0   0   50  0   0   0   59  0   0   0   47  0   0   0   45  0   0   0   52  0   0   0   49  0   0   0   54  0   0   0   58  0   0   0   47  0   0   0   48  0   0   0   51  0   0   0   49  0   0   0   42  0   0   0   52  0   0   0   50  0   0   0   45  0   0   0 61  0   0   0   48  0   0   0   61  0   0   0   44  0   0   0   50  0   0   0   66  0   0   0   41  0   0   0   57  0   0   0   59  0   0   0   61  0   0   0   48  0   0   0   54  0   0   0   66  0   0   0   60  0   0   0   60  0   0   0   45  0   0   0   63  0   0   0   49  0   0   0   51  0   0   0   53  0   0   0 53  0   0   0   47  0   0   0   46  0   0   0   49  0   0   0   49  0   0   0   54  0   0   0   53  0   0   0   54  0   0   0   52  0   0   0   45  0   0   0   52  0   0   0   45  0   0   0   47  0   0   0   45  0   0   0   43  0   0   0   55  0   0   0   69  0   0   0   57  0   0   0   49  0   0   0   49  0   0   0 47  0   0   0   58  0   0   0   44  0   0   0   53  0   0   0   52  0   0   0   57  0   0   0   56  0   0   0   54  0   0   0   46  0   0   0   54  0   0   0   54  0   0   0   51  0   0   0   47  0   0   0   35  0   0   0   50  0   0   0   58  0   0   0   50  0   0   0   40  0   0   0   51  0   0   0   48  0   0   0 53  0   0   0   33  0   0   0   47  0   0   0   35  0   0   0   34  0   0   0   32  0   0   0   31  0   0   0   54  0   0   0   69  0   0   0   51  0   0   0   54  0   0   0   50  0   0   0   62  0   0   0   44  0   0   0   41  0   0   0   37  0   0   0   47  0   0   0   48  0   0   0   46  0   0   0   49  0   0   0 53  0   0   0   52  0   0   0   50  0   0   0   53  0   0   0   51  0   0   0   48  0   0   0   52  0   0   0   48  0   0   0   46  0   0   0   51  0   0   0   43  0   0   0   45  0   0   0   50  0   0   0   48  0   0   0   55  0   0   0   51  0   0   0   61  0   0   0   49  0   0   0   48  0   0   0   42  0   0   0 54  0   0   0   69  0   0   0   50  0   0   0   51  0   0   0   43  0   0   0   60  0   0   0   51  0   0   0   54  0   0   0   45  0   0   0   57  0   0   0   50  0   0   0   60  0   0   0   62  0   0   0   38  0   0   0   50  0   0   0   48  0   0   0   48  0   0   0   44  0   0   0   56  0   0   0   59  0   0   0 71  0   0   0   36  0   0   0   40  0   0   0   48  0   0   0   37  0   0   0   43  0   0   0   41  0   0   0   33  0   0   0   39  0   0   0   37  0   0   0   63  0   0   0   54  0   0   0   53  0   0   0   48  0   0   0   45  0   0   0   50  0   0   0   37  0   0   0   47  0   0   0   57  0   0   0   49  0   0   0 48  0   0   0   55  0   0   0   50  0   0   0   56  0   0   0   53  0   0   0   55  0   0   0   48  0   0   0   56  0   0   0   52  0   0   0   51  0   0   0   46  0   0   0   45  0   0   0   54  0   0   0   58  0   0   0   49  0   0   0   46  0   0   0   48  0   0   0   49  0   0   0   52  0   0   0   52  0   0   0 44  0   0   0   53  0   0   0   57  0   0   0   51  0   0   0   45  0   0   0   51  0   0   0   41  0   0   0   53  0   0   0   45  0   0   0   56  0   0   0   43  0   0   0   52  0   0   0   51  0   0   0   47  0   0   0   54  0   0   0   48  0   0   0   51  0   0   0   57  0   0   0   49  0   0   0   46  0   0   0 55  0   0   0   36  0   0   0   43  0   0   0   44  0   0   0   53  0   0   0   42  0   0   0   46  0   0   0   48  0   0   0   66  0   0   0   48  0   0   0   54  0   0   0   61  0   0   0   60  0   0   0   39  0   0   0   42  0   0   0   51  0   0   0   44  0   0   0   47  0   0   0   69  0   0   0   55  0   0   0 49  0   0   0   54  0   0   0   48  0   0   0   52  0   0   0   50  0   0   0   56  0   0   0   52  0   0   0   58  0   0   0   48  0   0   0   49  0   0   0   50  0   0   0   44  0   0   0   49  0   0   0   51  0   0   0   47  0   0   0   48  0   0   0   49  0   0   0   51  0   0   0   46  0   0   0   52  0   0   0 47  0   0   0   50  0   0   0   60  0   0   0   53  0   0   0   52  0   0   0   53  0   0   0   54  0   0   0   55  0   0   0   40  0   0   0   51  0   0   0   49  0   0   0   47  0   0   0   40  0   0   0   49  0   0   0   49  0   0   0   47  0   0   0   52  0   0   0   47  0   0   0   43  0   0   0   50  0   0   0 60  0   0   0   40  0   0   0   40  0   0   0   46  0   0   0   56  0   0   0   49  0   0   0   36  0   0   0   46  0   0   0   61  0   0   0   49  0   0   0   38  0   0   0   42  0   0   0   30  0   0   0   47  0   0   0   60  0   0   0   73  0   0   0   77  0   0   0   67  0   0   0   54  0   0   0   54  0   0   0 37  0   0   0   52  0   0   0   51  0   0   0   52  0   0   0   54  0   0   0   53  0   0   0   51  0   0   0   51  0   0   0   62  0   0   0   62  0   0   0   57  0   0   0   51  0   0   0   57  0   0   0   55  0   0   0   43  0   0   0   43  0   0   0   37  0   0   0   49  0   0   0   52  0   0   0   52  0   0   0 54  0   0   0   61  0   0   0   58  0   0   0   38  0   0   0   50  0   0   0   48  0   0   0   57  0   0   0   58  0   0   0   50  0   0   0   48  0   0   0   51  0   0   0   48  0   0   0   33  0   0   0   46  0   0   0   52  0   0   0   38  0   0   0   37  0   0   0   52  0   0   0   46  0   0   0   50  0   0   0 50  0   0   0   48  0   0   0   39  0   0   0   49  0   0   0   54  0   0   0   47  0   0   0   40  0   0   0   44  0   0   0   52  0   0   0   54  0   0   0   41  0   0   0   48  0   0   0   26  0   0   0   33  0   0   0   51  0   0   0   59  0   0   0   55  0   0   0   48  0   0   0   49  0   0   0   52  0   0   0 44  0   0   0   48  0   0   0   63  0   0   0   59  0   0   0   52  0   0   0   50  0   0   0   45  0   0   0   49  0   0   0   58  0   0   0   63  0   0   0   57  0   0   0   47  0   0   0   59  0   0   0   57  0   0   0   55  0   0   0   44  0   0   0   46  0   0   0   46  0   0   0   62  0   0   0   58  0   0   0 50  0   0   0   58  0   0   0   61  0   0   0   47  0   0   0   43  0   0   0   59  0   0   0   65  0   0   0   57  0   0   0   39  0   0   0   47  0   0   0   60  0   0   0   56  0   0   0   49  0   0   0   54  0   0   0   52  0   0   0   50  0   0   0   47  0   0   0   50  0   0   0   52  0   0   0   47  0   0   0 50  0   0   0   35  0   0   0   44  0   0   0   50  0   0   0   30  0   0   0   55  0   0   0   51  0   0   0   57  0   0   0   54  0   0   0   49  0   0   0   60  0   0   0   57  0   0   0   48  0   0   0   40  0   0   0   59  0   0   0   40  0   0   0   47  0   0   0   34  0   0   0   53  0   0   0   62  0   0   0 54  0   0   0   50  0   0   0   52  0   0   0   47  0   0   0   57  0   0   0   59  0   0   0   50  0   0   0   35  0   0   0   48  0   0   0   51  0   0   0   36  0   0   0   46  0   0   0   49  0   0   0   56  0   0   0   43  0   0   0   45  0   0   0   51  0   0   0   52  0   0   0   53  0   0   0   57  0   0   0 50  0   0   0   55  0   0   0   48  0   0   0   50  0   0   0   45  0   0   0   45  0   0   0   50  0   0   0   56  0   0   0   50  0   0   0   50  0   0   0   54  0   0   0   54  0   0   0   52  0   0   0   58  0   0   0   35  0   0   0   56  0   0   0   52  0   0   0   47  0   0   0   52  0   0   0   48  0   0   0 50  0   0   0   24  0   0   0   43  0   0   0   45  0   0   0   46  0   0   0   62  0   0   0   51  0   0   0   73  0   0   0   45  0   0   0   53  0   0   0   75  0   0   0   51  0   0   0   44  0   0   0   40  0   0   0   63  0   0   0   59  0   0   0   42  0   0   0   47  0   0   0   63  0   0   0   38  0   0   0 54  0   0   0   63  0   0   0   50  0   0   0   57  0   0   0   56  0   0   0   59  0   0   0   44  0   0   0   42  0   0   0   47  0   0   0   44  0   0   0   35  0   0   0   55  0   0   0   46  0   0   0   49  0   0   0   36  0   0   0   43  0   0   0   53  0   0   0   59  0   0   0   55  0   0   0   50  0   0   0 47  0   0   0   51  0   0   0   52  0   0   0   55  0   0   0   56  0   0   0   47  0   0   0   49  0   0   0   55  0   0   0   60  0   0   0   59  0   0   0   59  0   0   0   56  0   0   0   66  0   0   0   73  0   0   0   59  0   0   0   61  0   0   0   51  0   0   0   47  0   0   0   44  0   0   0   53  0   0   0 61  0   0   0   54  0   0   0   67  0   0   0   57  0   0   0   42  0   0   0   40  0   0   0   55  0   0   0   72  0   0   0   49  0   0   0   45  0   0   0   60  0   0   0   60  0   0   0   57  0   0   0   44  0   0   0   52  0   0   0   52  0   0   0   51  0   0   0   47  0   0   0   46  0   0   0   39  0   0   0 55  0   0   0   51  0   0   0   45  0   0   0   52  0   0   0   54  0   0   0   59  0   0   0   52  0   0   0   44  0   0   0   41  0   0   0   45  0   0   0   48  0   0   0   55  0   0   0   54  0   0   0   40  0   0   0   42  0   0   0   51  0   0   0   52  0   0   0   59  0   0   0   52  0   0   0   51  0   0   0 41  0   0   0   49  0   0   0   56  0   0   0   50  0   0   0   41  0   0   0   52  0   0   0   54  0   0   0   45  0   0   0   58  0   0   0   53  0   0   0   58  0   0   0   47  0   0   0   55  0   0   0   62  0   0   0   66  0   0   0   55  0   0   0   53  0   0   0   44  0   0   0   44  0   0   0   48  0   0   0 50  0   0   0   52  0   0   0   62  0   0   0   62  0   0   0   43  0   0   0   62  0   0   0   47  0   0   0   50  0   0   0   51  0   0   0   51  0   0   0   52  0   0   0   61  0   0   0   66  0   0   0   52  0   0   0   36  0   0   0   49  0   0   0   50  0   0   0   44  0   0   0   46  0   0   0   48  0   0   0 50  0   0   0   48  0   0   0   44  0   0   0   51  0   0   0   54  0   0   0   58  0   0   0   54  0   0   0   48  0   0   0   54  0   0   0   53  0   0   0   48  0   0   0   48  0   0   0   50  0   0   0   53  0   0   0   45  0   0   0   48  0   0   0   49  0   0   0   53  0   0   0   53  0   0   0   53  0   0   0 55  0   0   0   61  0   0   0   56  0   0   0   60  0   0   0   50  0   0   0   39  0   0   0   41  0   0   0   47  0   0   0   56  0   0   0   54  0   0   0   53  0   0   0   49  0   0   0   42  0   0   0   55  0   0   0   55  0   0   0   53  0   0   0   53  0   0   0   53  0   0   0   53  0   0   0   54  0   0   0 56  0   0   0   62  0   0   0   65  0   0   0   59  0   0   0   60  0   0   0   52  0   0   0   52  0   0   0   52  0   0   0   58  0   0   0   67  0   0   0   59  0   0   0   56  0   0   0   51  0   0   0   32  0   0   0   35  0   0   0   40  0   0   0   41  0   0   0   39  0   0   0   42  0   0   0   46  0   0   0 58  0   0   0   50  0   0   0   49  0   0   0   56  0   0   0   50  0   0   0   54  0   0   0   62  0   0   0   47  0   0   0   56  0   0   0   51  0   0   0   54  0   0   0   54  0   0   0   56  0   0   0   54  0   0   0   56  0   0   0   51  0   0   0   40  0   0   0   55  0   0   0   51  0   0   0   45  0   0   0 40  0   0   0   52  0   0   0   45  0   0   0   51  0   0   0   57  0   0   0   49  0   0   0   41  0   0   0   33  0   0   0   51  0   0   0   51  0   0   0   52  0   0   0   40  0   0   0   50  0   0   0   52  0   0   0   44  0   0   0   59  0   0   0   56  0   0   0   59  0   0   0   45  0   0   0   50  0   0   0 45  0   0   0   34  0   0   0   54  0   0   0   48  0   0   0   46  0   0   0   50  0   0   0   64  0   0   0   50  0   0   0   54  0   0   0   53  0   0   0   70  0   0   0   62  0   0   0   36  0   0   0   46  0   0   0   60  0   0   0   54  0   0   0   39  0   0   0   57  0   0   0   47  0   0   0   32  0   0   0 62  0   0   0   56  0   0   0   48  0   0   0   48  0   0   0   50  0   0   0   49  0   0   0   50  0   0   0   64  0   0   0   55  0   0   0   48  0   0   0   48  0   0   0   53  0   0   0   56  0   0   0   54  0   0   0   60  0   0   0   54  0   0   0   49  0   0   0   48  0   0   0   40  0   0   0   27  0   0   0 51  0   0   0   49  0   0   0   51  0   0   0   56  0   0   0   56  0   0   0   41  0   0   0   37  0   0   0   40  0   0   0   50  0   0   0   61  0   0   0   50  0   0   0   41  0   0   0   52  0   0   0   56  0   0   0   50  0   0   0   54  0   0   0   60  0   0   0   51  0   0   0   56  0   0   0   45  0   0   0 50  0   0   0   46  0   0   0   53  0   0   0   47  0   0   0   37  0   0   0   41  0   0   0   51  0   0   0   60  0   0   0   53  0   0   0   50  0   0   0   70  0   0   0   78  0   0   0   61  0   0   0   65  0   0   0   49  0   0   0   32  0   0   0   40  0   0   0   62  0   0   0   31  0   0   0   8   0   0   0 55  0   0   0   60  0   0   0   53  0   0   0   54  0   0   0   55  0   0   0   57  0   0   0   51  0   0   0   49  0   0   0   52  0   0   0   45  0   0   0   38  0   0   0   41  0   0   0   45  0   0   0   45  0   0   0   66  0   0   0   54  0   0   0   54  0   0   0   38  0   0   0   26  0   0   0   4   0   0   0 42  0   0   0   50  0   0   0   52  0   0   0   54  0   0   0   56  0   0   0   45  0   0   0   39  0   0   0   49  0   0   0   47  0   0   0   58  0   0   0   53  0   0   0   60  0   0   0   48  0   0   0   45  0   0   0   48  0   0   0   48  0   0   0   53  0   0   0   52  0   0   0   54  0   0   0   48  0   0   0 51  0   0   0   52  0   0   0   43  0   0   0   45  0   0   0   50  0   0   0   38  0   0   0   45  0   0   0   45  0   0   0   43  0   0   0   55  0   0   0   68  0   0   0   69  0   0   0   57  0   0   0   66  0   0   0   59  0   0   0   48  0   0   0   42  0   0   0   35  0   0   0   30  0   0   0   18  0   0   0 48  0   0   0   46  0   0   0   55  0   0   0   58  0   0   0   54  0   0   0   58  0   0   0   53  0   0   0   50  0   0   0   53  0   0   0   38  0   0   0   47  0   0   0   46  0   0   0   40  0   0   0   49  0   0   0   49  0   0   0   38  0   0   0   30  0   0   0   24  0   0   0   18  0   0   0   1   0   0   0 38  0   0   0   51  0   0   0   48  0   0   0   59  0   0   0   46  0   0   0   50  0   0   0   44  0   0   0   49  0   0   0   62  0   0   0   56  0   0   0   46  0   0   0   52  0   0   0   46  0   0   0   47  0   0   0   42  0   0   0   51  0   0   0   52  0   0   0   48  0   0   0   49  0   0   0   49  0   0   0 48  0   0   0   47  0   0   0   52  0   0   0   63  0   0   0   68  0   0   0   51  0   0   0   42  0   0   0   35  0   0   0   59  0   0   0   64  0   0   0   49  0   0   0   45  0   0   0   39  0   0   0   57  0   0   0   53  0   0   0   33  0   0   0   33  0   0   0   28  0   0   0   15  0   0   0   1   0   0   0 44  0   0   0   41  0   0   0   50  0   0   0   55  0   0   0   47  0   0   0   56  0   0   0   56  0   0   0   48  0   0   0   43  0   0   0   52  0   0   0   47  0   0   0   48  0   0   0   50  0   0   0   45  0   0   0   39  0   0   0   37  0   0   0   20  0   0   0   13  0   0   0   18  0   0   0   8   0   0   0 47  0   0   0   63  0   0   0   51  0   0   0   45  0   0   0   51  0   0   0   48  0   0   0   42  0   0   0   55  0   0   0   54  0   0   0   50  0   0   0   53  0   0   0   50  0   0   0   45  0   0   0   53  0   0   0   47  0   0   0   56  0   0   0   52  0   0   0   49  0   0   0   48  0   0   0   55  0   0   0 43  0   0   0   31  0   0   0   45  0   0   0   56  0   0   0   55  0   0   0   63  0   0   0   49  0   0   0   20  0   0   0   39  0   0   0   40  0   0   0   49  0   0   0   43  0   0   0   23  0   0   0   30  0   0   0   30  0   0   0   21  0   0   0   8   0   0   0   18  0   0   0   22  0   0   0   9   0   0   0 56  0   0   0   51  0   0   0   56  0   0   0   38  0   0   0   47  0   0   0   51  0   0   0   55  0   0   0   55  0   0   0   45  0   0   0   57  0   0   0   47  0   0   0   51  0   0   0   47  0   0   0   37  0   0   0   22  0   0   0   17  0   0   0   22  0   0   0   13  0   0   0   14  0   0   0   5   0   0   0 51  0   0   0   58  0   0   0   52  0   0   0   60  0   0   0   51  0   0   0   40  0   0   0   35  0   0   0   65  0   0   0   59  0   0   0   56  0   0   0   49  0   0   0   45  0   0   0   53  0   0   0   52  0   0   0   57  0   0   0   54  0   0   0   49  0   0   0   54  0   0   0   61  0   0   0   63  0   0   0 23  0   0   0   50  0   0   0   51  0   0   0   63  0   0   0   49  0   0   0   51  0   0   0   51  0   0   0   18  0   0   0   59  0   0   0   57  0   0   0   40  0   0   0   38  0   0   0   23  0   0   0   7   0   0   0   8   0   0   0   15  0   0   0   2   0   0   0   10  0   0   0   11  0   0   0   24  0   0   0 55  0   0   0   58  0   0   0   59  0   0   0   51  0   0   0   46  0   0   0   48  0   0   0   53  0   0   0   52  0   0   0   48  0   0   0   46  0   0   0   35  0   0   0   32  0   0   0   15  0   0   0   11  0   0   0   16  0   0   0   11  0   0   0   13  0   0   0   15  0   0   0   8   0   0   0   10  0   0   0 52  0   0   0   45  0   0   0   50  0   0   0   57  0   0   0   48  0   0   0   50  0   0   0   45  0   0   0   67  0   0   0   56  0   0   0   56  0   0   0   56  0   0   0   41  0   0   0   55  0   0   0   52  0   0   0   52  0   0   0   49  0   0   0   57  0   0   0   63  0   0   0   58  0   0   0   50  0   0   0 55  0   0   0   57  0   0   0   33  0   0   0   47  0   0   0   53  0   0   0   35  0   0   0   59  0   0   0   55  0   0   0   65  0   0   0   54  0   0   0   33  0   0   0   14  0   0   0   11  0   0   0   3   0   0   0   0   0   0   0   34  0   0   0   29  0   0   0   24  0   0   0   21  0   0   0   29  0   0   0 60  0   0   0   57  0   0   0   51  0   0   0   57  0   0   0   47  0   0   0   46  0   0   0   44  0   0   0   36  0   0   0   43  0   0   0   37  0   0   0   28  0   0   0   17  0   0   0   17  0   0   0   19  0   0   0   12  0   0   0   0   0   0   0   0   0   0   0   21  0   0   0   14  0   0   0   16  0   0   0 45  0   0   0   38  0   0   0   50  0   0   0   51  0   0   0   47  0   0   0   52  0   0   0   54  0   0   0   63  0   0   0   59  0   0   0   50  0   0   0   50  0   0   0   51  0   0   0   52  0   0   0   47  0   0   0   44  0   0   0   58  0   0   0   68  0   0   0   56  0   0   0   54  0   0   0   52  0   0   0 58  0   0   0   50  0   0   0   45  0   0   0   60  0   0   0   60  0   0   0   48  0   0   0   55  0   0   0   40  0   0   0   36  0   0   0   37  0   0   0   14  0   0   0   10  0   0   0   12  0   0   0   2   0   0   0   6   0   0   0   27  0   0   0   17  0   0   0   10  0   0   0   39  0   0   0   36  0   0   0 51  0   0   0   53  0   0   0   51  0   0   0   41  0   0   0   39  0   0   0   51  0   0   0   38  0   0   0   31  0   0   0   26  0   0   0   25  0   0   0   15  0   0   0   8   0   0   0   0   0   0   0   11  0   0   0   9   0   0   0   0   0   0   0   2   0   0   0   20  0   0   0   21  0   0   0   22  0   0   0 43  0   0   0   48  0   0   0   50  0   0   0   48  0   0   0   54  0   0   0   51  0   0   0   63  0   0   0   58  0   0   0   48  0   0   0   40  0   0   0   55  0   0   0   58  0   0   0   58  0   0   0   59  0   0   0   53  0   0   0   60  0   0   0   64  0   0   0   53  0   0   0   52  0   0   0   52  0   0   0 </code></pre>  <p><a href=""https://i.stack.imgur.com/YQefM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YQefM.png"" alt=""output2""></a></p>  <hr>  <p>EDIT for more context</p>  <p>After some reading into opencv and the following <a href=""https://stackoverflow.com/a/25735362"">answer on SO</a> i believe that it's a case of rotating the numpy array to match the default format</p>  <p><a href=""https://i.stack.imgur.com/5DAn6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5DAn6.png"" alt=""colorspace""></a></p>  <p>Adding a larger image and transposing based on the above assumption ends up with the same format as opencv is expecting rows-to-cols; but the image is still greyscale; is squished &amp; has artifacts as below (the text should be red and it should be taller as an image)</p>  <pre><code>data = data.transpose() </code></pre>  <p><a href=""https://i.stack.imgur.com/7nofe.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7nofe.jpg"" alt=""enter image description here""></a></p>  <p>EDIT: Resultant code looks like:</p>  <pre><code>image=ctrl.GetImageWindow(0;0; w;h)  data = numpy.array(image; dtype=numpy.uint8).reshape(768;-1;3)   data=data.transpose()  b;g;r = data[::3;]; data[1::3;];data[2::3]   result = cv2.merge([b;g;r])  cv2.imwrite(""test-raw.png""; result) cv2.imshow(""test-raw""; result) cv2.waitKey() </code></pre>  OUTPUT  <pre><code>Image Details: {'width': 2048; 'dateTime': '2018-05-03 17:35:34.564646'; 'bytesPerPixel': 3; 'height': 1536; 'pixelFormat': 'BGR8'} libpng warning: Invalid image width in IHDR libpng warning: Image width exceeds user limit in IHDR libpng warning: Invalid image height in IHDR libpng warning: Image height exceeds user limit in IHDR libpng error: Invalid IHDR data OpenCV Error: Bad flag (parameter or structure field) (Unrecognized or unsupported array type) in cvGetMat; file C:\projects\opencv-python\opencv\modules\core\src\array.cpp; line 2493 Traceback (most recent call last): File ""ActiveGigeComTypes3.py""; line 69; in &lt;module&gt; cv2.imshow(""test-raw""; result) cv2.error: C:\projects\opencv-python\opencv\modules\core\src\array.cpp:2493: error: (-206) Unrecognized or unsupported array type in function cvGetMat </code></pre>",<p>Working example is:</p>  <pre><code>image=ctrl.GetImageWindow(0;0; w;h) data = numpy.array(image; dtype=numpy.ui,27250,153pe(768;-1;3)  </code></pre>
70303419,Porting special math functions from matlab to numpy,numpy|matlab|math,1,0,0,2021-12-10 10:55:17.367 UTC,2021-12-11 15:08:30.28 UTC,<p>Here is Matlab code; as published in the MathWorks community section.</p> <pre><code>[x;y;z] = ellipsoid(0;-0.5;0;6;3.25;3.25); A=[x(:);y(:);z(:)]; [U; c] = MgnCalibration(A)  function [U;c] = MgnCalibration(X) % performs magnetometer calibration from a set of data % using Merayo technique with a non iterative algoritm % J.Merayo et al. &quot;Scalar calibration of vector magnemoters&quot; % Meas. Sci. Technol. 11 (2000) 120-132. % %   X      : a Nx3 (or 3xN) data matrix %              each row (columns) contains x; y; z measurements %              N must be such that the data set describes %              as completely as possible the 3D space %              In any case N &gt; 10 %               %    The calibration tries to find the best 3D ellipsoid that fits the data set %    and returns the parameters of this ellipsoid % %    U     :  shape ellipsoid parameter; (3x3) upper triangular matrix %    c      : ellipsoid center; (3x1) vector % %    Ellipsoid equation : (v-c)'*(U'*U)(v-c) = 1  %    with v a rough triaxes magnetometer  measurement % %    calibrated measurement w = U*(v-c) % %   author : Alain Barraud; Suzanne Lesecq 2008 % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% [N;m] = size(X); if m&gt;3&amp;&amp;N==3;X = X';N = m;m = 3;end;%check that X is not transposed if N&lt;=10;U = [];c = [];return;end;%not enough data no calibration !! % write  the ellipsoid equation as D*p=0 % the best parameter is the solution of min||D*p|| with ||p||=1; % form D matrix from X measurements x = X(:;1); y = X(:;2); z = X(:;3);  D = [x.^2; y.^2; z.^2; x.*y; x.*z; y.*z; x; y; z; ones(N;1)]; size(D) D=triu(qr(D));%avoids to compute the svd of a large matrix [U;S;V] = svd(D);%because usually N may be very large p = V(:;end);if p(1)&lt;0;p =-p;end; % the following matrix A(p) must be positive definite % The optimization done by svd does not include such a constraint % With &quot;good&quot; data the constraint is allways satisfied % With too poor data A may fail to be positive definite % In this case the calibration fails % A = [p(1) p(4)/2 p(5)/2;        p(4)/2 p(2) p(6)/2;         p(5)/2 p(6)/2 p(3)]; [U;ok] = fchol(m;A); if ~ok;U = [];c = [];return;end%calibration fails too poor data!! b = [p(7);p(8);p(9)]; v = Utsolve(U;b/2;m); d = p(10); s = 1/sqrt(v*v'-d); c =-Usolve(U;v;m)';%ellipsoid center U = s*U;%shape ellipsoid parameter end %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% function [A;ok] = fchol(n;A) % performs Cholesky factoristation A(1;1:n) = A(1;1:n)/sqrt(A(1;1)); A(2:n;1) = 0; for j=2:n   A(j;j:n) = A(j;j:n) - A(1:j-1;j)'*A(1:j-1;j:n);   if A(j;j)&lt;=0;ok=0;break;end%A is not positive definite   A(j;j:n) = A(j;j:n)/sqrt(A(j;j));   A(j+1:n;j) = 0; end ok=1; end function x=Utsolve(U;b;n) % solves U'*x=b x(1) = b(1)/U(1;1); for k=2:n     x(k) = (b(k)-x(1:k-1)*U(1:k-1;k))/U(k;k); end end function x=Usolve(U;b;n) % solves U*x=b x(n) = b(n)/U(n;n); for k=n-1:-1:1     x(k) = (b(k)-U(k;k+1:n)*x(k+1:n)')/U(k;k); end end </code></pre> <p>And here is my port to NumPy; together with the same test data; with most of the porting work done already. However; now I run into the more advanced math functions like <code>qr</code>; <code>svd</code> and <code>triu</code> I have no experience with and no more profound understanding. My current problem is that on the numpy side; when looking with a debugger; the individual elements of D are organized in rows and still wrapped in np.array() calls and Matlab arranges them in columns. When computing qr() or those two entities; the results differ; regardless of whether I transpose D on the numpy side or not. Why is that?</p> <p>I was able to verify the utsolve and usolve functions; already.</p> <pre><code>import numpy as np from scipy.linalg import qr; svd   def calibrate_magnetometer(calibration_data: np.ndarray):     &quot;&quot;&quot;      performs magnetometer calibration from a set of data      using Merayo technique with a non iterative algoritm      J.Merayo et al. &quot;Scalar calibration of vector magnemoters&quot;      Meas. Sci. Technol. 11 (2000) 120-132.         X      : a Nx3 (or 3xN) data matrix                   each row (columns) contains x; y; z measurements                   N must be such that the data set describes                      as completely as possible the 3D space                   In any case N &gt; 10          The calibration tries to find the best 3D ellipsoid that fits the data set         and returns the parameters of this ellipsoid          U     :  shape ellipsoid parameter; (3x3) upper triangular matrix         c      : ellipsoid center; (3x1) vector          Ellipsoid equation : (v-c)'*(U'*U)(v-c) = 1         with v a rough triaxes magnetometer  measurement          calibrated measurement w = U*(v-c)         author : Alain Barraud; Suzanne Lesecq 2008     &quot;&quot;&quot;     (n; m) = calibration_data.shape     if m &gt; 3 and n == 3:  # check that x is not transposed         calibration_data = calibration_data.T         n = m         m = 3     if n &lt;= 10:         return False  # not enough data for calibration      # write the ellipsoid equation as D*p=0     # the best parameter is the solution of min||D*p|| with ||p||=1     # form D matix from X measurements     x = calibration_data[:; 0]     y = calibration_data[:; 1]     z = calibration_data[:; 2]     D = np.array([np.square(x); np.square(y); np.square(z);                   np.multiply(x; y); np.multiply(x; z); np.multiply(x; z);                   x; y; z;                   np.ones(n)])     D = np.triu(qr(D.T))  # avoids to compute the svd of a large matrix     u; s; v = svd(D)  # because usually N may be very large     p = v[-1]     if p[0] &lt; 0:         p = -p     # the following matrix a(p) must be positive definite.     # the optimization done by svd does not include such a constrain     # with &quot;good&quot; data the constrain is allways satisfied     # with too poor data A may fail to be positive definite     # in this case the calibration fails      a = np.array([[p[0]; p[3] / 2; p[4] / 2];                   [p[3] / 2; p[1]; p[5] / 2];                   [p[4] / 2; p[5] / 2; p[2]]])     uu = np.linalg.cholesky(a)     b = np.array([p[6]; p[7]; p[8]])     vv = utsolve(uu; b / 2; m)     d = p(10)     s = 1 / np.sqrt(vv * vv.T - d)     calibrated_c = -usolve(uu; vv; m)  # ellipsoid center; or offset error     calibrated_u = s * uu  # shape ellipsoid parameter     return calibrated_u; calibrated_c   def utsolve(u; b; n):     # solves u.T*x=b     x = np.zeros(n)      x[0] = b[0] / u[0; 0]     for k in range(1; n):         x[k] = (b[k] - np.matmul(x[0:k]; u[0:k; k])) / u[k; k]     return x   def usolve(u; b; n):     # solves u*x=b     x = np.zeros((n; 1))      x[n - 1] = b[n - 1] / u[n - 1; n - 1]     for k in reversed(range(0; n - 1)):         x[k] = (b[k] - np.matmul(u[k; k + 1:n]; x[k + 1:n].T[0])) / u[k; k]     return x.T[0]   def main():     a = np.array([[0; -0.5000; -3.2500];                   [-0.9386; -0.5000; -3.2100];                   [-1.8541; -0.5000; -3.0909];                   [-2.7239; -0.5000; -2.8958];                   [-3.5267; -0.5000; -2.6293];                   [-4.2426; -0.5000; -2.2981];                   [-4.8541; -0.5000; -1.9103];                   [-5.3460; -0.5000; -1.4755];                   [-5.7063; -0.5000; -1.0043];                   [-5.9261; -0.5000; -0.5084];                   [-6.0000; -0.5000; 0];                   [-5.9261; -0.5000; 0.5084];                   [-5.7063; -0.5000; 1.0043];                   [-5.3460; -0.5000; 1.4755];                   [-4.8541; -0.5000; 1.9103];                   [-4.2426; -0.5000; 2.2981];                   [-3.5267; -0.5000; 2.6293];                   [-2.7239; -0.5000; 2.8958];                   [-1.8541; -0.5000; 3.0909];                   [-0.9386; -0.5000; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [-0.8927; -0.6571; -3.2100];                   [-1.7634; -0.8103; -3.0909];                   [-2.5906; -0.9559; -2.8958];                   [-3.3541; -1.0903; -2.6293];                   [-4.0350; -1.2102; -2.2981];                   [-4.6165; -1.3125; -1.9103];                   [-5.0844; -1.3948; -1.4755];                   [-5.4271; -1.4552; -1.0043];                   [-5.6361; -1.4919; -0.5084];                   [-5.7063; -1.5043; 0];                   [-5.6361; -1.4919; 0.5084];                   [-5.4271; -1.4552; 1.0043];                   [-5.0844; -1.3948; 1.4755];                   [-4.6165; -1.3125; 1.9103];                   [-4.0350; -1.2102; 2.2981];                   [-3.3541; -1.0903; 2.6293];                   [-2.5906; -0.9559; 2.8958];                   [-1.7634; -0.8103; 3.0909];                   [-0.8927; -0.6571; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [-0.7593; -0.7988; -3.2100];                   [-1.5000; -1.0903; -3.0909];                   [-2.2037; -1.3673; -2.8958];                   [-2.8532; -1.6228; -2.6293];                   [-3.4324; -1.8508; -2.2981];                   [-3.9271; -2.0455; -1.9103];                   [-4.3250; -2.2021; -1.4755];                   [-4.6165; -2.3168; -1.0043];                   [-4.7943; -2.3868; -0.5084];                   [-4.8541; -2.4103; 0];                   [-4.7943; -2.3868; 0.5084];                   [-4.6165; -2.3168; 1.0043];                   [-4.3250; -2.2021; 1.4755];                   [-3.9271; -2.0455; 1.9103];                   [-3.4324; -1.8508; 2.2981];                   [-2.8532; -1.6228; 2.6293];                   [-2.2037; -1.3673; 2.8958];                   [-1.5000; -1.0903; 3.0909];                   [-0.7593; -0.7988; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [-0.5517; -0.9113; -3.2100];                   [-1.0898; -1.3125; -3.0909];                   [-1.6011; -1.6937; -2.8958];                   [-2.0729; -2.0455; -2.6293];                   [-2.4938; -2.3592; -2.2981];                   [-2.8532; -2.6272; -1.9103];                   [-3.1423; -2.8427; -1.4755];                   [-3.3541; -3.0006; -1.0043];                   [-3.4833; -3.0969; -0.5084];                   [-3.5267; -3.1293; 0];                   [-3.4833; -3.0969; 0.5084];                   [-3.3541; -3.0006; 1.0043];                   [-3.1423; -2.8427; 1.4755];                   [-2.8532; -2.6272; 1.9103];                   [-2.4938; -2.3592; 2.2981];                   [-2.0729; -2.0455; 2.6293];                   [-1.6011; -1.6937; 2.8958];                   [-1.0898; -1.3125; 3.0909];                   [-0.5517; -0.9113; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [-0.2900; -0.9835; -3.2100];                   [-0.5729; -1.4552; -3.0909];                   [-0.8417; -1.9033; -2.8958];                   [-1.0898; -2.3168; -2.6293];                   [-1.3110; -2.6856; -2.2981];                   [-1.5000; -3.0006; -1.9103];                   [-1.6520; -3.2540; -1.4755];                   [-1.7634; -3.4397; -1.0043];                   [-1.8313; -3.5529; -0.5084];                   [-1.8541; -3.5909; 0];                   [-1.8313; -3.5529; 0.5084];                   [-1.7634; -3.4397; 1.0043];                   [-1.6520; -3.2540; 1.4755];                   [-1.5000; -3.0006; 1.9103];                   [-1.3110; -2.6856; 2.2981];                   [-1.0898; -2.3168; 2.6293];                   [-0.8417; -1.9033; 2.8958];                   [-0.5729; -1.4552; 3.0909];                   [-0.2900; -0.9835; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.0000; -1.0084; -3.2100];                   [0.0000; -1.5043; -3.0909];                   [0.0000; -1.9755; -2.8958];                   [0.0000; -2.4103; -2.6293];                   [0.0000; -2.7981; -2.2981];                   [0.0000; -3.1293; -1.9103];                   [0.0000; -3.3958; -1.4755];                   [0.0000; -3.5909; -1.0043];                   [0.0000; -3.7100; -0.5084];                   [0.0000; -3.7500; 0];                   [0.0000; -3.7100; 0.5084];                   [0.0000; -3.5909; 1.0043];                   [0.0000; -3.3958; 1.4755];                   [0.0000; -3.1293; 1.9103];                   [0.0000; -2.7981; 2.2981];                   [0.0000; -2.4103; 2.6293];                   [0.0000; -1.9755; 2.8958];                   [0.0000; -1.5043; 3.0909];                   [0.0000; -1.0084; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.2900; -0.9835; -3.2100];                   [0.5729; -1.4552; -3.0909];                   [0.8417; -1.9033; -2.8958];                   [1.0898; -2.3168; -2.6293];                   [1.3110; -2.6856; -2.2981];                   [1.5000; -3.0006; -1.9103];                   [1.6520; -3.2540; -1.4755];                   [1.7634; -3.4397; -1.0043];                   [1.8313; -3.5529; -0.5084];                   [1.8541; -3.5909; 0];                   [1.8313; -3.5529; 0.5084];                   [1.7634; -3.4397; 1.0043];                   [1.6520; -3.2540; 1.4755];                   [1.5000; -3.0006; 1.9103];                   [1.3110; -2.6856; 2.2981];                   [1.0898; -2.3168; 2.6293];                   [0.8417; -1.9033; 2.8958];                   [0.5729; -1.4552; 3.0909];                   [0.2900; -0.9835; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.5517; -0.9113; -3.2100];                   [1.0898; -1.3125; -3.0909];                   [1.6011; -1.6937; -2.8958];                   [2.0729; -2.0455; -2.6293];                   [2.4938; -2.3592; -2.2981];                   [2.8532; -2.6272; -1.9103];                   [3.1423; -2.8427; -1.4755];                   [3.3541; -3.0006; -1.0043];                   [3.4833; -3.0969; -0.5084];                   [3.5267; -3.1293; 0];                   [3.4833; -3.0969; 0.5084];                   [3.3541; -3.0006; 1.0043];                   [3.1423; -2.8427; 1.4755];                   [2.8532; -2.6272; 1.9103];                   [2.4938; -2.3592; 2.2981];                   [2.0729; -2.0455; 2.6293];                   [1.6011; -1.6937; 2.8958];                   [1.0898; -1.3125; 3.0909];                   [0.5517; -0.9113; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.7593; -0.7988; -3.2100];                   [1.5000; -1.0903; -3.0909];                   [2.2037; -1.3673; -2.8958];                   [2.8532; -1.6228; -2.6293];                   [3.4324; -1.8508; -2.2981];                   [3.9271; -2.0455; -1.9103];                   [4.3250; -2.2021; -1.4755];                   [4.6165; -2.3168; -1.0043];                   [4.7943; -2.3868; -0.5084];                   [4.8541; -2.4103; 0];                   [4.7943; -2.3868; 0.5084];                   [4.6165; -2.3168; 1.0043];                   [4.3250; -2.2021; 1.4755];                   [3.9271; -2.0455; 1.9103];                   [3.4324; -1.8508; 2.2981];                   [2.8532; -1.6228; 2.6293];                   [2.2037; -1.3673; 2.8958];                   [1.5000; -1.0903; 3.0909];                   [0.7593; -0.7988; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.8927; -0.6571; -3.2100];                   [1.7634; -0.8103; -3.0909];                   [2.5906; -0.9559; -2.8958];                   [3.3541; -1.0903; -2.6293];                   [4.0350; -1.2102; -2.2981];                   [4.6165; -1.3125; -1.9103];                   [5.0844; -1.3948; -1.4755];                   [5.4271; -1.4552; -1.0043];                   [5.6361; -1.4919; -0.5084];                   [5.7063; -1.5043; 0];                   [5.6361; -1.4919; 0.5084];                   [5.4271; -1.4552; 1.0043];                   [5.0844; -1.3948; 1.4755];                   [4.6165; -1.3125; 1.9103];                   [4.0350; -1.2102; 2.2981];                   [3.3541; -1.0903; 2.6293];                   [2.5906; -0.9559; 2.8958];                   [1.7634; -0.8103; 3.0909];                   [0.8927; -0.6571; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.9386; -0.5000; -3.2100];                   [1.8541; -0.5000; -3.0909];                   [2.7239; -0.5000; -2.8958];                   [3.5267; -0.5000; -2.6293];                   [4.2426; -0.5000; -2.2981];                   [4.8541; -0.5000; -1.9103];                   [5.3460; -0.5000; -1.4755];                   [5.7063; -0.5000; -1.0043];                   [5.9261; -0.5000; -0.5084];                   [6.0000; -0.5000; 0];                   [5.9261; -0.5000; 0.5084];                   [5.7063; -0.5000; 1.0043];                   [5.3460; -0.5000; 1.4755];                   [4.8541; -0.5000; 1.9103];                   [4.2426; -0.5000; 2.2981];                   [3.5267; -0.5000; 2.6293];                   [2.7239; -0.5000; 2.8958];                   [1.8541; -0.5000; 3.0909];                   [0.9386; -0.5000; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.8927; -0.3429; -3.2100];                   [1.7634; -0.1897; -3.0909];                   [2.5906; -0.0441; -2.8958];                   [3.3541; 0.0903; -2.6293];                   [4.0350; 0.2102; -2.2981];                   [4.6165; 0.3125; -1.9103];                   [5.0844; 0.3948; -1.4755];                   [5.4271; 0.4552; -1.0043];                   [5.6361; 0.4919; -0.5084];                   [5.7063; 0.5043; 0];                   [5.6361; 0.4919; 0.5084];                   [5.4271; 0.4552; 1.0043];                   [5.0844; 0.3948; 1.4755];                   [4.6165; 0.3125; 1.9103];                   [4.0350; 0.2102; 2.2981];                   [3.3541; 0.0903; 2.6293];                   [2.5906; -0.0441; 2.8958];                   [1.7634; -0.1897; 3.0909];                   [0.8927; -0.3429; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.7593; -0.2012; -3.2100];                   [1.5000; 0.0903; -3.0909];                   [2.2037; 0.3673; -2.8958];                   [2.8532; 0.6228; -2.6293];                   [3.4324; 0.8508; -2.2981];                   [3.9271; 1.0455; -1.9103];                   [4.3250; 1.2021; -1.4755];                   [4.6165; 1.3168; -1.0043];                   [4.7943; 1.3868; -0.5084];                   [4.8541; 1.4103; 0];                   [4.7943; 1.3868; 0.5084];                   [4.6165; 1.3168; 1.0043];                   [4.3250; 1.2021; 1.4755];                   [3.9271; 1.0455; 1.9103];                   [3.4324; 0.8508; 2.2981];                   [2.8532; 0.6228; 2.6293];                   [2.2037; 0.3673; 2.8958];                   [1.5000; 0.0903; 3.0909];                   [0.7593; -0.2012; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.5517; -0.0887; -3.2100];                   [1.0898; 0.3125; -3.0909];                   [1.6011; 0.6937; -2.8958];                   [2.0729; 1.0455; -2.6293];                   [2.4938; 1.3592; -2.2981];                   [2.8532; 1.6272; -1.9103];                   [3.1423; 1.8427; -1.4755];                   [3.3541; 2.0006; -1.0043];                   [3.4833; 2.0969; -0.5084];                   [3.5267; 2.1293; 0];                   [3.4833; 2.0969; 0.5084];                   [3.3541; 2.0006; 1.0043];                   [3.1423; 1.8427; 1.4755];                   [2.8532; 1.6272; 1.9103];                   [2.4938; 1.3592; 2.2981];                   [2.0729; 1.0455; 2.6293];                   [1.6011; 0.6937; 2.8958];                   [1.0898; 0.3125; 3.0909];                   [0.5517; -0.0887; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.2900; -0.0165; -3.2100];                   [0.5729; 0.4552; -3.0909];                   [0.8417; 0.9033; -2.8958];                   [1.0898; 1.3168; -2.6293];                   [1.3110; 1.6856; -2.2981];                   [1.5000; 2.0006; -1.9103];                   [1.6520; 2.2540; -1.4755];                   [1.7634; 2.4397; -1.0043];                   [1.8313; 2.5529; -0.5084];                   [1.8541; 2.5909; 0];                   [1.8313; 2.5529; 0.5084];                   [1.7634; 2.4397; 1.0043];                   [1.6520; 2.2540; 1.4755];                   [1.5000; 2.0006; 1.9103];                   [1.3110; 1.6856; 2.2981];                   [1.0898; 1.3168; 2.6293];                   [0.8417; 0.9033; 2.8958];                   [0.5729; 0.4552; 3.0909];                   [0.2900; -0.0165; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [0.0000; 0.0084; -3.2100];                   [0.0000; 0.5043; -3.0909];                   [0.0000; 0.9755; -2.8958];                   [0.0000; 1.4103; -2.6293];                   [0.0000; 1.7981; -2.2981];                   [0.0000; 2.1293; -1.9103];                   [0.0000; 2.3958; -1.4755];                   [0.0000; 2.5909; -1.0043];                   [0.0000; 2.7100; -0.5084];                   [0.0000; 2.7500; 0];                   [0.0000; 2.7100; 0.5084];                   [0.0000; 2.5909; 1.0043];                   [0.0000; 2.3958; 1.4755];                   [0.0000; 2.1293; 1.9103];                   [0.0000; 1.7981; 2.2981];                   [0.0000; 1.4103; 2.6293];                   [0.0000; 0.9755; 2.8958];                   [0.0000; 0.5043; 3.0909];                   [0.0000; 0.0084; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [-0.2900; -0.0165; -3.2100];                   [-0.5729; 0.4552; -3.0909];                   [-0.8417; 0.9033; -2.8958];                   [-1.0898; 1.3168; -2.6293];                   [-1.3110; 1.6856; -2.2981];                   [-1.5000; 2.0006; -1.9103];                   [-1.6520; 2.2540; -1.4755];                   [-1.7634; 2.4397; -1.0043];                   [-1.8313; 2.5529; -0.5084];                   [-1.8541; 2.5909; 0];                   [-1.8313; 2.5529; 0.5084];                   [-1.7634; 2.4397; 1.0043];                   [-1.6520; 2.2540; 1.4755];                   [-1.5000; 2.0006; 1.9103];                   [-1.3110; 1.6856; 2.2981];                   [-1.0898; 1.3168; 2.6293];                   [-0.8417; 0.9033; 2.8958];                   [-0.5729; 0.4552; 3.0909];                   [-0.2900; -0.0165; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [-0.5517; -0.0887; -3.2100];                   [-1.0898; 0.3125; -3.0909];                   [-1.6011; 0.6937; -2.8958];                   [-2.0729; 1.0455; -2.6293];                   [-2.4938; 1.3592; -2.2981];                   [-2.8532; 1.6272; -1.9103];                   [-3.1423; 1.8427; -1.4755];                   [-3.3541; 2.0006; -1.0043];                   [-3.4833; 2.0969; -0.5084];                   [-3.5267; 2.1293; 0];                   [-3.4833; 2.0969; 0.5084];                   [-3.3541; 2.0006; 1.0043];                   [-3.1423; 1.8427; 1.4755];                   [-2.8532; 1.6272; 1.9103];                   [-2.4938; 1.3592; 2.2981];                   [-2.0729; 1.0455; 2.6293];                   [-1.6011; 0.6937; 2.8958];                   [-1.0898; 0.3125; 3.0909];                   [-0.5517; -0.0887; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [-0.7593; -0.2012; -3.2100];                   [-1.5000; 0.0903; -3.0909];                   [-2.2037; 0.3673; -2.8958];                   [-2.8532; 0.6228; -2.6293];                   [-3.4324; 0.8508; -2.2981];                   [-3.9271; 1.0455; -1.9103];                   [-4.3250; 1.2021; -1.4755];                   [-4.6165; 1.3168; -1.0043];                   [-4.7943; 1.3868; -0.5084];                   [-4.8541; 1.4103; 0];                   [-4.7943; 1.3868; 0.5084];                   [-4.6165; 1.3168; 1.0043];                   [-4.3250; 1.2021; 1.4755];                   [-3.9271; 1.0455; 1.9103];                   [-3.4324; 0.8508; 2.2981];                   [-2.8532; 0.6228; 2.6293];                   [-2.2037; 0.3673; 2.8958];                   [-1.5000; 0.0903; 3.0909];                   [-0.7593; -0.2012; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [-0.8927; -0.3429; -3.2100];                   [-1.7634; -0.1897; -3.0909];                   [-2.5906; -0.0441; -2.8958];                   [-3.3541; 0.0903; -2.6293];                   [-4.0350; 0.2102; -2.2981];                   [-4.6165; 0.3125; -1.9103];                   [-5.0844; 0.3948; -1.4755];                   [-5.4271; 0.4552; -1.0043];                   [-5.6361; 0.4919; -0.5084];                   [-5.7063; 0.5043; 0];                   [-5.6361; 0.4919; 0.5084];                   [-5.4271; 0.4552; 1.0043];                   [-5.0844; 0.3948; 1.4755];                   [-4.6165; 0.3125; 1.9103];                   [-4.0350; 0.2102; 2.2981];                   [-3.3541; 0.0903; 2.6293];                   [-2.5906; -0.0441; 2.8958];                   [-1.7634; -0.1897; 3.0909];                   [-0.8927; -0.3429; 3.2100];                   [0; -0.5000; 3.2500];                   [0; -0.5000; -3.2500];                   [-0.9386; -0.5000; -3.2100];                   [-1.8541; -0.5000; -3.0909];                   [-2.7239; -0.5000; -2.8958];                   [-3.5267; -0.5000; -2.6293];                   [-4.2426; -0.5000; -2.2981];                   [-4.8541; -0.5000; -1.9103];                   [-5.3460; -0.5000; -1.4755];                   [-5.7063; -0.5000; -1.0043];                   [-5.9261; -0.5000; -0.5084];                   [-6.0000; -0.5000; 0];                   [-5.9261; -0.5000; 0.5084];                   [-5.7063; -0.5000; 1.0043];                   [-5.3460; -0.5000; 1.4755];                   [-4.8541; -0.5000; 1.9103];                   [-4.2426; -0.5000; 2.2981];                   [-3.5267; -0.5000; 2.6293];                   [-2.7239; -0.5000; 2.8958];                   [-1.8541; -0.5000; 3.0909];                   [-0.9386; -0.5000; 3.2100];                   [0; -0.5000; 3.2500]])     u = np.arange(1; 17).reshape(4; -1)     b = np.arange(4)     print(&quot;utsolve: {}&quot;.format(calibrate_magnetometer(a)))   if __name__ == &quot;__main__&quot;:     main() </code></pre>,<p>This seems to work like the mathlab code. The remaining issues were mostly to &quot;flatten&quot; the internal np.arrays in D and to select the second returnvalue from qr().</p> <pre><code>import numpy as np from scipy.linalg import qr; svd   def calibrate_magnetometer(calibration_data: np.ndarray):     &quot;&quot;&quot;      performs magnetometer calibration from a set of data      using Merayo technique with a non iterative algoritm      J.Merayo et al. &quot;Scalar calibration of vector magnemoters&quot;      Meas. Sci. Technol. 11 (2000) 120-132.         X      : a Nx3 (or 3xN) data matrix                   each row (columns) contains x; y; z measurements                   N must be such that the data set describes                      as completely as possible the 3D space                   In any case N &gt; 10          The calibration tries to find the best 3D ellipsoid that fits the data set         and returns the parameters of this ellipsoid          U     :  shape ellipsoid parameter; (3x3) upper triangular matrix         c      : ellipsoid center; (3x1) vector          Ellipsoid equation : (v-c)'*(U'*U)(v-c) = 1         with v a rough triaxes magnetometer  measurement          calibrated measurement w = U*(v-c)         author : Alain Barraud; Suzanne Lesecq 2008     &quot;&quot;&quot;     (n; m) = calibration_data.shape     if m &gt; 3 and n == 3:  # check that x is not transposed         calibration_data = calibration_data.T         n = m         m = 3     if n &lt;= 10:         return False  # not enough data for calibration      # write the ellipsoid equation as D*p=0     # the best parameter is the solution of min||D*p|| with ||p||=1     # form D matix from X measurements     x = calibration_data[:; 0]     y = calibration_data[:; 1]     z = calibration_data[:; 2]      D = [np.square(x); np.square(y); np.square(z);          np.multiply(x;y); np.multiply(x;z); np.multiply(y;z);          x; y; z;          np.ones(n)]     D = np.array(D)      D = np.triu(qr(D.T)[1])  # avoids to compute the svd of a large matrix     u; s; v = svd(D)  # because usually N may be very large     p = v[-1]     if p[0] &lt; 0:         p = -p     # the following matrix a(p) must be positive definite.     # the optimization done by svd does not include such a constrain     # with &quot;good&quot; data the constrain is allways satisfied     # with too poor data A may fail to be positive definite     # in this case the calibration fails      a = np.array([[p[0]; p[3] / 2; p[4] / 2];                   [p[3] / 2; p[1]; p[5] / 2];                   [p[4] / 2; p[5] / 2; p[2]]])     uu = np.linalg.cholesky(a)     b = np.array([p[6]; p[7]; p[8]])     vv = utsolve(uu; b / 2; m)     d = p[9]     s = 1 / np.sqrt(vv * vv.T - d)     calibrated_c = -usolve(uu; vv; m)  # ellipsoid center; or offset error     calibrated_u = s * uu  # shape ellipsoid parameter     return calibrated_u; calibrated_c   def utsolve(u; b; n):     # solves u.T*x=b     x = np.zeros(n)      x[0] = b[0] / u[0; 0]     for k in range(1; n):         x[k] = (b[k] - np.matmul(x[0:k]; u[0:k; k])) / u[k; k]     return x   def usolve(u; b; n):     # solves u*x=b     x = np.zeros((n; 1))      x[n - 1] = b[n - 1] / u[n - 1; n - 1]     for k in reversed(range(0;,26872,3377       x[k] = (b[k] - np.matmul(u[k; k + 1:n]; x[k + 1:n].T[0])) / u[k; k]     return x.T[0] </code></pre>

""" Question 4 Shell Command ($): """

sort -t',' -k 5,5 -nr -k 9,9 -k 6,6 -nr stackoverflow_numpy_qa.csv | head -10

""" Question 4 Shell Output ($): """

18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,781,2013-09-09 03:25:02.583 UTC,2017-02-28 13:48:51.95 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,<p>The criterion to satisfy for providing the new shape is that <em>'The new shape should be compatible with the original shape'</em></p>  <p>numpy allow us to give one of new shape parameter as -1 (eg: (2;-1) or (-1;3) but not (-1; -1)). It simply means that it is an unknown dimension and we want numpy to figure it out. And numpy will figure this by looking at the  <em>'length of the array and remaining dimensions'</em> and making sure it satisfies the above mentioned criteria</p>  <p>Now see the example.</p>  <pre><code>z = np.array([[1; 2; 3; 4];          [5; 6; 7; 8];          [9; 10; 11; 12]]) z.shape (3; 4) </code></pre>  <p>Now trying to reshape with (-1) . Result new shape is (12;) and is compatible with original shape (3;4) </p>  <pre><code>z.reshape(-1) array([ 1;  2;  3;  4;  5;  6;  7;  8;  9; 10; 11; 12]) </code></pre>  <p>Now trying to reshape with (-1; 1) . We have provided column as 1 but rows as unknown . So we get result new shape as (12; 1).again compatible with original shape(3;4) </p>  <pre><code>z.reshape(-1;1) array([[ 1];    [ 2];    [ 3];    [ 4];    [ 5];    [ 6];    [ 7];    [ 8];    [ 9];    [10];    [11];    [12]]) </code></pre>  <p>The above is consistent with <code>numpy</code> advice/error message; to use <code>reshape(-1;1)</code> for a single feature; i.e. single column</p>  <blockquote>   <p>Reshape your data using <code>array.reshape(-1; 1)</code> if your data has a <strong>single feature</strong></p> </blockquote>  <p>New shape as (-1; 2). row unknown; column 2. we get result new shape as (6; 2)</p>  <pre><code>z.reshape(-1; 2) array([[ 1;  2];    [ 3;  4];    [ 5;  6];    [ 7;  8];    [ 9; 10];    [11; 12]]) </code></pre>  <p>Now trying to keep column as unknown. New shape as (1;-1). i.e; row is 1; column unknown. we get result new shape as (1; 12)</p>  <pre><code>z.reshape(1;-1) array([[ 1;  2;  3;  4;  5;  6;  7;  8;  9; 10; 11; 12]]) </code></pre>  <p>The above is consistent with <code>numpy</code> advice/error message; to use <code>reshape(1;-1)</code> for a single sample; i.e. single row</p>  <blockquote>   <p>Reshape your data using <code>array.reshape(1; -1)</code> if it contains a <strong>single sample</strong></p> </blockquote>  <p>New shape (2; -1). Row 2; column unknown. we get result new shape as (2;6)</p>  <pre><code>z.reshape(2; -1) array([[ 1;  2;  3;  4;  5;  6];    [ 7;  8;  9; 10; 11; 12]]) </code></pre>  <p>New shape as (3; -1). Row 3; column unknown. we get result new shape as (3;4)</p>  <pre><code>z.reshape(3; -1) array([[ 1;  2;  3;  4];    [ 5;  6;  7;  8];    [ 9; 10; 11; 12]]) </code></pre>  <p>And finally; if we try to provide both dimension as unknown i.e new shape as (-1;-1). It will throw an error</p>  <pre><code>z.reshape(-1; -1) ValueError: can only specify one unknown dimension </code></pre>
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,100,2013-09-09 03:25:02.583 UTC,2017-03-22 11:35:35.177 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,"<p>Used to reshape an array.</p> <p>Say we have a 3 dimensional array of dimensions 2 x 10 x 10:</p> <pre><code>r = numpy.random.rand(2; 10; 10)  </code></pre> <p>Now we want to reshape to 5 X 5 x 8:</p> <pre><code>numpy.reshape(r; shape=(5; 5; 8))  </code></pre> <p>will do the job.</p> <p>Note that; once you fix first <code>dim = 5</code> and second <code>dim = 5</code>; you don't need to determine third dimension. To assist your laziness; Numpy gives the option of using <code>-1</code>:</p> <pre><code>numpy.reshape(r; shape=(5; 5; -1))  </code></pre> <p>will give you an array of <code>shape = (5; 5; 8)</code>.</p> <p>Likewise;</p> <pre><code>numpy.reshape(r; shape=(50; -1))  </code></pre> <p>will give you an array of shape = (50; 4)</p> <p>You can read more at <a href=""http://anie.me/numpy-reshape-transpose-theano-dimshuffle/"" rel=""noreferrer"">http://anie.me/numpy-reshape-transpose-theano-dimshuffle/</a></p>"
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,67,2013-09-09 03:25:02.583 UTC,2013-09-09 03:27:07 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,"<p>According to <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html#numpy-reshape""><code>the documentation</code></a>:</p>  <blockquote>   <p>newshape : int or tuple of ints</p>      <p>The new shape should be compatible with the original shape. If an   integer; then the result will be a 1-D array of that length. One shape   dimension can be <strong>-1. In this case; the value is inferred from the   length of the array and remaining dimensions.</strong></p> </blockquote>"
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,21,2013-09-09 03:25:02.583 UTC,2017-01-02 16:41:36.43 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,"<pre><code>numpy.reshape(a;newshape;order{}) </code></pre> <p>check the below link for more info. <a href=""https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html"" rel=""nofollow noreferrer"">https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html</a></p> <p>for the below example you mentioned the output explains the resultant vector to be a single row.(-1) indicates the number of rows to be 1. if the</p> <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre> <p>output:</p> <pre><code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]]) </code></pre> <p>this can be explained more precisely with another example:</p> <pre><code>b = np.arange(10).reshape((-1;1)) </code></pre> <p>output:(is a 1 dimensional columnar array)</p> <pre><code>array([[0];        [1];        [2];        [3];        [4];        [5];        [6];        [7];        [8];        [9]]) </code></pre> <p>or</p> <pre><code>b = np.arange(10).reshape((1;-1)) </code></pre> <p>output:(is a 1 dimensional row array)</p> <pre><code>array([[0; 1; 2; 3; 4; 5; 6; 7; 8; 9]]) </code></pre>"
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,17,2013-09-09 03:25:02.583 UTC,2019-11-27 13:12:03.43 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,"<p><em>It simply means that you are not sure about what number of rows  or columns you can give and you are asking numpy to suggest a number of column or rows to get reshaped in.</em></p> <p>numpy provides the last example for -1 <a href=""https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html"" rel=""noreferrer"">https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html</a></p> <p>check below code and its output to better understand about (-1):</p> <p>CODE:-</p> <pre><code>import numpy a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) print(&quot;Without reshaping  -&gt; &quot;) print(a) b = numpy.reshape(a; -1) print(&quot;HERE We don't know about what number we should give to row/col&quot;) print(&quot;Reshaping as (a;-1)&quot;) print(b) c = numpy.reshape(a; (-1;2)) print(&quot;HERE We just know about number of columns&quot;) print(&quot;Reshaping as (a;(-1;2))&quot;) print(c) d = numpy.reshape(a; (2;-1)) print(&quot;HERE We just know about number of rows&quot;) print(&quot;Reshaping as (a;(2;-1))&quot;) print(d) </code></pre> <p>OUTPUT:-</p> <pre><code>Without reshaping  -&gt;  [[1 2 3 4]  [5 6 7 8]] HERE We don`t know about what number we should give to row/col Reshaping as (a;-1) [[1 2 3 4 5 6 7 8]] HERE We just know about number of columns Reshaping as (a;(-1;2)) [[1 2]  [3 4]  [5 6]  [7 8]] HERE We just know about number of rows Reshaping as (a;(2;-1)) [[1 2 3 4]  [5 6 7 8]] </code></pre>"
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,17,2013-09-09 03:25:02.583 UTC,2017-02-27 01:56:58.54 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,<p>The <code>-1</code> stands for &quot;unknown dimension&quot; which can be inferred from another dimension. In this case; if you set your matrix like this:</p> <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) </code></pre> <p>Modify your matrix like this:</p> <pre><code>b = numpy.reshape(a; -1) </code></pre> <p>It will call some default operations to the matrix <code>a</code>; which will return a 1-d <code>numpy</code> array/matrix.</p> <p>However; I don't think it is a good idea to use code like this. Why not try:</p> <pre><code>b = a.reshape(1; -1) </code></pre> <p>It will give you the same result and it's more clear for readers to understand: Set <code>b</code> as another shape of <code>a</code>. For <code>a</code>; we don't how many columns it should have (set it to -1!); but we want a 1-dimension array (set the first parameter to 1!).</p>
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,16,2013-09-09 03:25:02.583 UTC,2020-05-26 21:00:46.677 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,<p>The final outcome of the conversion is that the number of elements in the final array is same as that of the initial array or data frame.</p> <p>-1 corresponds to the unknown count of the row or column. We can think of it as <code>x</code>(unknown). <code>x</code> is obtained by dividing the number of elements in the original array by the other value of the ordered pair with -1.</p> <p>Examples:</p> <p>12 elements with <code>reshape(-1;1)</code> corresponds to an array with <code>x</code>=12/1=12 rows and 1 column.</p> <br/> <p>12 elements with <code>reshape(1;-1)</code> corresponds to an array with 1 row and <code>x</code>=12/1=12 columns.</p>
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,12,2013-09-09 03:25:02.583 UTC,2018-12-08 15:26:46.163 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,<p><strong>Long story short</strong>: you set some dimensions and let NumPy set the remaining(s).</p>  <pre><code>(userDim1; userDim2; ...; -1) --&gt;&gt;  (userDim1; userDim1; ...; TOTAL_DIMENSION - (userDim1 + userDim2 + ...)) </code></pre>
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,10,2013-09-09 03:25:02.583 UTC,2020-04-10 05:40:24.527 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,<pre><code>import numpy as np x = np.array([[2;3;4]; [5;6;7]])   # Convert any shape to 1D shape x = np.reshape(x; (-1)) # Making it 1 row -&gt; (6;)  # When you don't care about rows and just want to fix number of columns x = np.reshape(x; (-1; 1)) # Making it 1 column -&gt; (6; 1) x = np.reshape(x; (-1; 2)) # Making it 2 column -&gt; (3; 2) x = np.reshape(x; (-1; 3)) # Making it 3 column -&gt; (2; 3)  # When you don't care about columns and just want to fix number of rows x = np.reshape(x; (1; -1)) # Making it 1 row -&gt; (1; 6) x = np.reshape(x; (2; -1)) # Making it 2 row -&gt; (2; 3) x = np.reshape(x; (3; -1)) # Making it 3 row -&gt; (3; 2) </code></pre>
18691084,What does -1 mean in numpy reshape?,python|numpy|reshape|numpy-ndarray,11,587,3,2013-09-09 03:25:02.583 UTC,2021-01-26 02:46:08.56 UTC,<p>A numpy matrix can be reshaped into a vector using reshape function with parameter -1. But I don't know what -1 means here.</p>  <p>For example: </p>  <pre><code>a = numpy.matrix([[1; 2; 3; 4]; [5; 6; 7; 8]]) b = numpy.reshape(a; -1) </code></pre>  <p>The result of <code>b</code> is: <code>matrix([[1; 2; 3; 4; 5; 6; 7; 8]])</code></p>  <p>Does anyone know what -1 means here? And it seems python assign -1 several meanings; such as: <code>array[-1]</code> means the last element. Can you give an explanation?</p>,"<p>I didn't manage to understand what <code>np.reshape()</code> does until I read <a href=""https://www.mikulskibartosz.name/numpy-reshape-explained/"" rel=""nofollow noreferrer"">this article</a>.</p> <p>Mechanically it is clear what <code>reshape()</code> does. But how do we interpret the data before and after reshape?</p> <p>The missing piece for me was:</p> <blockquote> <p>When we train a machine learning model; the nesting levels of arrays have precisely defined meaning.</p> </blockquote> <p>This means that the reshape operation <strong>has to be keenly aware</strong> both points below before the operation has any meaning:</p> <ul> <li>the data it operates on (how the reshape input looks like)</li> <li>how the algorithm/model expects the reshaped data to be (how the reshape output looks like)</li> </ul> <p>For example:</p> <blockquote> <p>The external array contains observations/rows. The inner array contains columns/features. This causes two special cases when we have either an array of multiple observations of only one feature or a single observation of multiple features.</p> </blockquote> <p>For more advanced example: See <a href=""https://stackoverflow.com/questions/41396970/tensorflow-3-channel-order-of-color-inputs"">this stackoverflow question</a></p>"

""" Question 5 Shell Command ($): """

cd /Users/rontzidon/studies/big_data_mining

awk -v start=$(date -d "$7" +%s) -v end=  $(date -d "$8" +%s)  'BEGIN{FS=OFS="," ; diff = end-start} {$9=(NR > 1 ? int($diff / 86400):"day_diff" ) FS $9} 1' stackoverflow_numpy_qa.csv > tmp.csv

mv tmp.csv stackoverflow_numpy_qa.csv

head -5 stackoverflow_numpy_qa.csv

""" Question 5 Shell Output ($): """

usage: date [-jnRu] [-d dst] [-r seconds] [-t west] [-v[+|-]val[ymwdHMS]] ... 
            [-f fmt date | [[[mm]dd]HH]MM[[cc]yy][.ss]] [+format]
usage: date [-jnRu] [-d dst] [-r seconds] [-t west] [-v[+|-]val[ymwdHMS]] ... 
            [-f fmt date | [[[mm]dd]HH]MM[[cc]yy][.ss]] [+format]


id,Questions_title,tags,answer_count,score_question,score_answer,question_creation_date,answer_creation_date,day_diff,day_diff,question_body,answer_body
7818811,Import Error: No module named numpy,python|python-3.x|numpy|import|scipy,27,278,0,2011-10-19 08:54:16.127 UTC,2021-07-27 13:01:18.44 UTC,90,90,"<p>I have a very similar question to <a href=""https://stackoverflow.com/questions/1517129/python-how-do-i-install-scipy-on-64-bit-windows"">this question</a>; but still one step behind. I have only one version of Python 3 installed on my Windows 7 (<em>sorry</em>) 64-bit system.</p>  <p>I installed numpy following this <a href=""http://sourceforge.net/projects/numpy/files/NumPy/1.3.0/numpy-1.3.0.win-amd64-py2.6.msi/download?use_mirror=ufpr"" rel=""noreferrer"">link</a> - as suggested in the question. The installation went fine but when I execute </p>  <pre><code>import numpy </code></pre>  <p>I got the following error:</p>  <blockquote>   <p>Import error: No module named numpy</p> </blockquote>  <p>I know this is probably a super basic question; but I'm still learning.</p>  <p>Thanks</p>","<p>For whom installation target is <strong>Raspberry Pi</strong>; as <a href=""https://numpy.org/devdocs/user/troubleshooting-importerror.html"" rel=""nofollow noreferrer"">here</a> they suggest:</p> <pre><code>sudo apt-get install libatlas-base-dev </code></pre> <p>could be working.</p>"
30003068,How to get a list of all indices of repeated elements in a numpy array,python|arrays|numpy,9,21,0,2015-05-02 13:49:48.667 UTC,2021-08-22 01:01:30.743 UTC,347,347,<p>I'm trying to get the index of all repeated elements in a numpy array; but the solution I found for the moment is REALLY inefficient for a large (&gt;20000 elements) input array (it takes more or less 9 seconds). The idea is simple:</p> <ol> <li><p><code>records_array</code>is a numpy array of timestamps (<code>datetime</code>) from which we want to extract the indexes of repeated timestamps</p> </li> <li><p><code>time_array</code> is a numpy array containing all the timestamps that are repeated in <code>records_array</code></p> </li> <li><p><code>records</code> is a django QuerySet (which can easily converted to a list) containing some Record objects. We want to create a list of couples formed by all possible combinations of tagId attributes of Record corresponding to the repeated timestamps found from <code>records_array</code>.</p> </li> </ol> <p>Here is the working (but inefficient) code I have for the moment:</p> <pre><code>tag_couples = []; for t in time_array:     users_inter = np.nonzero(records_array == t)[0] # Get all repeated timestamps in records_array for time t     l = [str(records[i].tagId) for i in users_inter] # Create a temporary list containing all tagIds recorded at time t     if l.count(l[0]) != len(l): #remove tuples formed by the first tag repeated         tag_couples +=[x for x in itertools.combinations(list(set(l));2)] # Remove duplicates with list(set(l)) and append all possible couple combinations to tag_couples </code></pre> <p>I'm quite sure this can be optimized by using Numpy; but I can't find a way to compare <code>records_array</code> with each element of <code>time_array</code> without using a for loop (this can't be compared by just using <code>==</code>; since they are both arrays).</p>,"<h3><code>numba.jit</code></h3> <p>Another solution; but using <code>numba.jit</code>:</p> <pre><code>def np_unique_indices(arr; **kwargs):     &quot;&quot;&quot;Unique indices for N-D arrays.&quot;&quot;&quot;     vals; indices = np_unique_indices_1d(arr.reshape(-1))     vals = np.asarray(vals)     indices = [np.stack(np.unravel_index(x; arr.shape)) for x in indices]     return vals; indices   @numba.njit def np_unique_indices_1d(arr):     &quot;&quot;&quot;Unique indices for 1D arrays.&quot;&quot;&quot;     idxs = [[0 for _ in range(0)] for _ in range(0)]     ptr = {}     ptr_count = 0      for i; x in enumerate(arr):         if (x in ptr) == False:             idxs.append([0 for _ in range(0)])             ptr[x] = ptr_count             ptr_count += 1         idxs[ptr[x]].append(i)      vals = [x for x in ptr]     idxs = [np.array(x) for x in idxs]     return vals; idxs </code></pre> <p>Using @Trenton McKinney's and user27443's benchmark:</p> <p><a href=""https://i.stack.imgur.com/UPQzg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UPQzg.png"" alt=""enter image description here"" /></a></p> <p>Note that the performance of all the solutions depends on the size of the arrays and the amount of unique labels; so I recommend testing them yourself for your own data.</p>"
30003068,How to get a list of all indices of repeated elements in a numpy array,python|arrays|numpy,9,21,0,2015-05-02 13:49:48.667 UTC,2021-07-27 08:06:14.66 UTC,347,347,<p>I'm trying to get the index of all repeated elements in a numpy array; but the solution I found for the moment is REALLY inefficient for a large (&gt;20000 elements) input array (it takes more or less 9 seconds). The idea is simple:</p> <ol> <li><p><code>records_array</code>is a numpy array of timestamps (<code>datetime</code>) from which we want to extract the indexes of repeated timestamps</p> </li> <li><p><code>time_array</code> is a numpy array containing all the timestamps that are repeated in <code>records_array</code></p> </li> <li><p><code>records</code> is a django QuerySet (which can easily converted to a list) containing some Record objects. We want to create a list of couples formed by all possible combinations of tagId attributes of Record corresponding to the repeated timestamps found from <code>records_array</code>.</p> </li> </ol> <p>Here is the working (but inefficient) code I have for the moment:</p> <pre><code>tag_couples = []; for t in time_array:     users_inter = np.nonzero(records_array == t)[0] # Get all repeated timestamps in records_array for time t     l = [str(records[i].tagId) for i in users_inter] # Create a temporary list containing all tagIds recorded at time t     if l.count(l[0]) != len(l): #remove tuples formed by the first tag repeated         tag_couples +=[x for x in itertools.combinations(list(set(l));2)] # Remove duplicates with list(set(l)) and append all possible couple combinations to tag_couples </code></pre> <p>I'm quite sure this can be optimized by using Numpy; but I can't find a way to compare <code>records_array</code> with each element of <code>time_array</code> without using a for loop (this can't be compared by just using <code>==</code>; since they are both arrays).</p>,<pre><code>import numpy as np from numpy.lib import recfunctions as rfn  ndtype = [('records_array'; int)] # Check the data type records_array = np.ma.array([1; 2; 1; 3; 2; 3; 3; 4; 5]).view(ndtype) # Structured array idxs = list(rfn.find_duplicates(records_array; key=None; ignoremask=True; return_index=True)[1]) # List of indices of repeated elements </code></pre>
58868528,Importing the numpy c-extensions failed,python|numpy|visual-studio-code|miniconda,13,48,0,2019-11-15 00:21:29.167 UTC,2021-08-26 23:08:08.01 UTC,681,681,"<p></p>  <h3>Importing the numpy c-extensions failed</h3>  <p>I installed <em>python 3.7</em> on my windows system to work on <em><strong>visual studio code</strong></em>. Everything was going well; including using the libraries. I uninstalled python using the <em>uninstalling program tool in control panel</em>. And installed <em><strong>Miniconda 3</strong></em>. I checked that everything works well; and then installed the numpy library using <code>conda install numpy</code> in my terminal <em><strong>GitBash</strong></em> on <strong><em>windows 10</em></strong>; then checked it on my visial studio code; but it failed to start.</p>  <h3>Reproducing code example:</h3>    <pre class=""lang-py prettyprint-override""><code>import numpy as np A = np.array([[-1]; [7]; [-26]]) </code></pre>    <h3>Error message:</h3>  <blockquote>   <p>Traceback (most recent call last):   File   ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy\core__init__.py"";   line 17; in        from . import multiarray   File ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy\core\multiarray.py"";   line 14; in        from . import overrides   File ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy\core\overrides.py"";   line 7; in        from numpy.core._multiarray_umath import ( ImportError: DLL load failed: Не найден указанный модуль.</p>      <p>During handling of the above exception; another exception occurred:</p>      <p>Traceback (most recent call last):   File   ""c:/Users/ramim/Desktop/22/Matrix library/alsf.py""; line 3; in          import numpy as np   File ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy__init__.py""; line   142; in        from . import core   File ""C:\Users\ramim\Miniconda3\lib\site-packages\numpy\core__init__.py"";   line 47; in        raise ImportError(msg) ImportError:</p>      <p>IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!</p>      <p>Importing the numpy c-extensions failed.   - Try uninstalling and reinstalling numpy.   - If you have already done that; then:     1. Check that you expected to use Python3.7 from ""C:\Users\ramim\Miniconda3\python.exe"";        and that you have no directories in your PATH or PYTHONPATH that can        interfere with the Python and numpy version ""1.17.3"" you're trying to use.     2. If (1) looks fine; you can open a new issue at        <a href=""https://github.com/numpy/numpy/issues"" rel=""noreferrer"">https://github.com/numpy/numpy/issues</a>.  Please include details on:        - how you installed Python        - how you installed numpy        - your operating system        - whether or not you have multiple versions of Python installed        - if you built from source; your compiler versions and ideally a build log</p>      <ul>   <li>If you're working with a numpy git repository; try <code>git clean -xdf</code>   (removes all files not under version control) and rebuild numpy.</li>   </ul>      <p>Note: this error has many possible causes; so please don't comment on   an existing issue about this - open a new one instead.</p>      <p>Original error was: DLL load failed: Не найден указанный модуль.</p> </blockquote>      <h3>Numpy/Python version information:</h3>  <p> Python 3.7.5 Numpy 1.17.3</p>  <p>I tried to uninstall and install the numpy library again; but it was useless. <strong><em>Note:</em></strong> when I type in the teminal <code>conda install numpy</code>; it says:</p>  <blockquote>   <p>All requested packages already installed</p> </blockquote>  <p>That's how I checked if numpy is really installed! </p>  <p><strong><em>How to solve that?</em></strong></p>",<p>I solved the problem by reinstalling NumPy through pip:</p> <pre><code>pip install --upgrade --force-reinstall numpy                   </code></pre>

""" Question 6 Shell Command ($): """

awk -F , '{x=int($9/30)} {if(x*30 < $9  && $9 <= 30*(x +1)) print >  x+1}' stackoverflow_numpy_qa.csv

ls -l

Head -3 1

""" Question 6 Shell Output ($): """

total 1101464
-rw-r--r--  1 rontzidon  staff     781820 May 16 18:21 1
-rw-r--r--  1 rontzidon  staff    2766393 May 16 18:21 10
-rw-r--r--  1 rontzidon  staff    2778674 May 16 18:21 11
-rw-r--r--  1 rontzidon  staff    3025511 May 16 18:21 12
-rw-r--r--  1 rontzidon  staff    2984425 May 16 18:21 13
-rw-r--r--  1 rontzidon  staff    4079936 May 16 18:21 14
-rw-r--r--  1 rontzidon  staff    3677627 May 16 18:21 15
-rw-r--r--  1 rontzidon  staff    4151560 May 16 18:21 16
-rw-r--r--  1 rontzidon  staff    4660645 May 16 18:21 17
-rw-r--r--  1 rontzidon  staff    4645407 May 16 18:21 18
-rw-r--r--  1 rontzidon  staff    5177251 May 16 18:21 19
-rw-r--r--  1 rontzidon  staff    1276713 May 16 18:21 2
-rw-r--r--  1 rontzidon  staff    5062162 May 16 18:21 20
-rw-r--r--  1 rontzidon  staff    5647309 May 16 18:21 21
-rw-r--r--  1 rontzidon  staff    5424842 May 16 18:21 22
-rw-r--r--  1 rontzidon  staff    5711808 May 16 18:21 23
-rw-r--r--  1 rontzidon  staff    5715078 May 16 18:21 24
-rw-r--r--  1 rontzidon  staff    6095291 May 16 18:21 25
-rw-r--r--  1 rontzidon  staff    6172725 May 16 18:21 26
-rw-r--r--  1 rontzidon  staff    5072919 May 16 18:21 27
-rw-r--r--  1 rontzidon  staff    2976672 May 16 18:21 28
-rw-r--r--  1 rontzidon  staff    1371024 May 16 18:21 3
-rw-r--r--  1 rontzidon  staff    1697044 May 16 18:21 4
-rw-r--r--  1 rontzidon  staff    1939721 May 16 18:21 5
-rw-r--r--  1 rontzidon  staff    1941709 May 16 18:21 6
-rw-r--r--  1 rontzidon  staff    2450602 May 16 18:21 7
-rw-r--r--  1 rontzidon  staff    2494864 May 16 18:21 8
-rw-r--r--  1 rontzidon  staff    2793213 May 16 18:21 9
-rw-r--r--@ 1 rontzidon  staff      25133 May 16 00:51 Mid Term Part 3.docx
-rw-r--r--@ 1 rontzidon  staff      91162 May 16 00:48 Mid Term Part 3.pdf
-rw-r--r--@ 1 rontzidon  staff      50384 May 12 15:35 MidTerm1_SQL_templatet.txt
-rw-r--r--@ 1 rontzidon  staff     201445 May 16 18:24 MidTerm2_unix_template.txt
-rw-r--r--@ 1 rontzidon  staff  105800853 May 16 18:03 copy
-rw-r--r--@ 1 rontzidon  staff  105985949 May 16 18:05 q5
-rw-r--r--@ 1 rontzidon  staff  105800853 May 16 18:01 q6
-rw-r--r--@ 1 rontzidon  staff  105985949 May 16 18:04 stackoverflow_numpy_qa.csv

2169478,How to make a checkerboard in numpy?,python|numpy,27,30,3,2010-01-30 21:19:53.157 UTC,2021-07-27 19:02:28.55 UTC,25,"<p>I'm using numpy to initialize a pixel array to a gray checkerboard (the classic representation for ""no pixels""; or transparent).  It seems like there ought to be a whizzy way to do it with numpy's amazing array assignment/slicing/dicing operations; but this is the best I've come up with:</p>  <pre><code>w; h = 600; 800 sq = 15    # width of each checker-square self.pix = numpy.zeros((w; h; 3); dtype=numpy.uint8) # Make a checkerboard row = [[(0x99;0x99;0x99);(0xAA;0xAA;0xAA)][(i//sq)%2] for i in range(w)] self.pix[[i for i in range(h) if (i//sq)%2 == 0]] = row row = [[(0xAA;0xAA;0xAA);(0x99;0x99;0x99)][(i//sq)%2] for i in range(w)] self.pix[[i for i in range(h) if (i//sq)%2 == 1]] = row </code></pre>  <p>It works; but I was hoping for something simpler.</p>","<p>A <a href=""https://github.com/nschloe/perfplot"" rel=""nofollow noreferrer"">perfplot</a> analysis shows that the best (fastest; most readable; memory-efficient) solution is via slicing;</p> <pre class=""lang-py prettyprint-override""><code>def slicing(n):     A = np.zeros((n; n); dtype=int)     A[1::2; ::2] = 1     A[::2; 1::2] = 1     return A </code></pre> <p>The stacking solution is a bit faster large matrices; but arguably less well readable. The top-voted answer is also the <em>slowest</em>.</p> <p><a href=""https://i.stack.imgur.com/IIioH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IIioH.png"" alt=""enter image description here"" /></a></p> <p>Code to reproduce the plot:</p> <pre class=""lang-py prettyprint-override""><code>import numpy as np import perfplot   def indices(n):     return np.indices((n; n)).sum(axis=0) % 2   def slicing(n):     A = np.zeros((n; n); dtype=int)     A[1::2; ::2] = 1     A[::2; 1::2] = 1     return A   def tile(n):     return np.tile([[0; 1]; [1; 0]]; (n // 2; n // 2))   def stacking(n):     row0 = np.array(n // 2 * [0; 1] + (n % 2) * [0])     row1 = row0 ^ 1     return np.array(n // 2 * [row0; row1] + (n % 2) * [row0])   def ogrid(n):     coords = np.ogrid[0:n; 0:n]     return (coords[0] + coords[1]) % 2   b = perfplot.bench(     setup=lambda n: n;     kernels=[slicing; indices; tile; stacking; ogrid];     n_range=[2 ** k for k in range(14)];     xlabel=&quot;n&quot;; ) b.save(&quot;out.png&quot;) b.show() </code></pre>"
1208118,Using numpy to build an array of all combinations of two arrays,python|arrays|numpy|multidimensional-array|cartesian-product,10,182,11,2009-07-30 17:32:27.11 UTC,2014-09-03 23:22:41.987 UTC,13,<p>I'm trying to run over the parameters space of a 6 parameter function to study its numerical behavior before trying to do anything complex with it; so I'm searching for an efficient way to do this.</p> <p>My function takes float values given in a 6-dim numpy array as input. What I tried to do initially was this:</p> <p>First; I created a function that takes 2 arrays and generate an array with all combinations of values from the two arrays:</p> <pre><code>from numpy import * def comb(a;b):     c = []     for i in a:         for j in b:             c.append(r_[i;j])     return c </code></pre> <p>Then; I used <code>reduce()</code> to apply that to m copies of the same array:</p> <pre><code>def combs(a;m):     return reduce(comb;[a]*m) </code></pre> <p>Finally; I evaluate my function like this:</p> <pre><code>values = combs(np.arange(0;1;0.1);6) for val in values:     print F(val) </code></pre> <p>This works but it's <em>way</em> too slow. I know the space of parameters is huge; but this shouldn't be so slow. I have only sampled 10<sup>6</sup> (a million) points in this example and it took more than 15 seconds just to create the array <code>values</code>.</p> <p>Do you know any more efficient way of doing this with numpy?</p> <p>I can modify the way the function <code>F</code> takes it's arguments if it's necessary.</p>,<p>The following numpy implementation should be approx. 2x the speed of the given answer:</p>  <pre><code>def cartesian2(arrays):     arrays = [np.asarray(a) for a in arrays]     shape = (len(x) for x in arrays)      ix = np.indices(shape; dtype=int)     ix = ix.reshape(len(arrays); -1).T      for n; arr in enumerate(arrays):         ix[:; n] = arrays[n][ix[:; n]]      return ix </code></pre>
2566412,Find nearest value in numpy array,python|search|numpy,19,425,100,2010-04-02 11:38:23.173 UTC,2014-09-24 20:48:09.42 UTC,29,<p>Is there a numpy-thonic way; e.g. function; to find the <em>nearest value</em> in an array? </p>  <p>Example:</p>  <pre><code>np.find_nearest( array; value ) </code></pre>,"<p><em>IF</em> your array is sorted and is very large; this is a much faster solution:</p>  <pre><code>def find_nearest(array;value):     idx = np.searchsorted(array; value; side=""left"")     if idx &gt; 0 and (idx == len(array) or math.fabs(value - array[idx-1]) &lt; math.fabs(value - array[idx])):         return array[idx-1]     else:         return array[idx] </code></pre>  <p>This scales to very large arrays. You can easily modify the above to sort in the method if you can't assume that the array is already sorted. It’s overkill for small arrays; but once they get large this is much faster.</p>"



